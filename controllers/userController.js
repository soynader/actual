(function (_0x4acbb7, _0x530183) { const _0x2c710d = _0x4ec3, _0x549374 = _0x4acbb7(); while (!![]) { try { const _0x53e087 = parseInt(_0x2c710d(0x136)) / 0x1 + -parseInt(_0x2c710d(0x120)) / 0x2 * (parseInt(_0x2c710d(0x14a)) / 0x3) + parseInt(_0x2c710d(0x106)) / 0x4 * (-parseInt(_0x2c710d(0x156)) / 0x5) + -parseInt(_0x2c710d(0x113)) / 0x6 + parseInt(_0x2c710d(0x16b)) / 0x7 + parseInt(_0x2c710d(0x148)) / 0x8 * (-parseInt(_0x2c710d(0x111)) / 0x9) + -parseInt(_0x2c710d(0x159)) / 0xa * (-parseInt(_0x2c710d(0x128)) / 0xb); if (_0x53e087 === _0x530183) break; else _0x549374['push'](_0x549374['shift']()); } catch (_0x5a7455) { _0x549374['push'](_0x549374['shift']()); } } }(_0x314b, 0xe3511)); import _0x26b268 from '../database/dbpromise.js'; import _0x220d35 from 'bcrypt'; function _0x4ec3(_0x594978, _0x3cecd1) { const _0x314bc6 = _0x314b(); return _0x4ec3 = function (_0x4ec3ff, _0x47555b) { _0x4ec3ff = _0x4ec3ff - 0xfd; let _0xad3738 = _0x314bc6[_0x4ec3ff]; return _0xad3738; }, _0x4ec3(_0x594978, _0x3cecd1); } import _0x17f161 from 'jsonwebtoken'; const { sign } = _0x17f161; import _0x2f6d77 from 'randomstring'; import { sendMessageMain, checkPlanExpiry, sendRecoveryEmail } from '../functions/function.js'; import _0x3541d0 from 'jsonwebtoken'; function _0x314b() { const _0x3a0771 = ['1563204hzbTpO', 'verify', 'SELECT\x20*\x20FROM\x20scrap_entries\x20WHERE\x20campaign_id\x20=\x20?\x20and\x20uid\x20=\x20?', 'Authorization', 'setFullYear', 'Your\x20plan\x20was\x20expired\x20please\x20renew\x20your\x20plan', 'UPDATE\x20user\x20SET\x20email\x20=\x20?,\x20password\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'You\x20dont\x20have\x20credits\x20to\x20send\x20message', '22RExLbk', 'toISOString', 'stringify', 'please\x20send\x20required\x20fields', 'allow_data_extract', 'campaign_id', 'Please\x20check\x20your\x20values', 'allow_multi_instance', 'client_id', 'UPDATE\x20user\x20SET\x20api\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'Templet\x20not\x20found', 'INSERT\x20INTO\x20ping\x20(uid,\x20user_msg)\x20VALUES\x20(?,?)', 'UPDATE\x20user\x20SET\x20email\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'Profile\x20was\x20updated\x20refresh\x20the\x20page', '1249752gZfMOi', 'finished', 'decode', 'Your\x20API\x20keys\x20are\x20invalid', 'username', 'scrapping\x20done\x20', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=?', 'SELECT\x20*\x20FROM\x20templet\x20WHERE\x20id\x20=\x20?', 'SELECT\x20*\x20FROM\x20logs\x20WHERE\x20uid\x20=\x20?', 'INSERT\x20INTO\x20scrap_entries\x20(campaign_id,\x20mobile,\x20email,\x20username,\x20name,\x20other,\x20uid)\x20VALUES\x20?', 'compare', 'We\x20have\x20sent\x20a\x20recovery\x20link\x20if\x20this\x20email\x20is\x20associated\x20with\x20user\x20account.', 'time', 'data', 'server\x20error', 'user', 'started', 'Invalid\x20token\x20found', '1016mYiEcB', 'log', '3psRIWV', 'INSERT\x20INTO\x20scrap_campaign\x20(uid,\x20campaign_id,\x20name,\x20site,\x20query,\x20status)\x20VALUES\x20(?,?,?,?,?,?)', 'You\x20are\x20not\x20allowed\x20to\x20use\x20data\x20extractor\x20please\x20upgrade\x20your\x20plan.', 'allowapi', 'No\x20input\x20provided', 'New\x20keys\x20has\x20been\x20generated', 'generate', 'User\x20has\x20been\x20updated', 'site', 'slice', 'Signup\x20Success', 'SELECT\x20*\x20FROM\x20ping\x20WHERE\x20uid\x20=\x20?', '30cEHrmL', 'old_email', 'length', '15741890gXwKye', 'instance', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?\x20', 'plan', 'A\x20user\x20already\x20exist\x20with\x20this\x20email', 'env', 'templetlimit', 'SELECT\x20*\x20FROM\x20bots\x20WHERE\x20uid\x20=\x20?\x20and\x20active\x20=\x20?', 'newpass', 'JWTKEY', 'name', 'mobile', 'password', 'round', 'query', 'success', 'msglimit', 'Please\x20send\x20all\x20required\x20fields', '12267451SxUtUf', 'parse', 'SELECT\x20*\x20FROM\x20phonebook_contacts\x20WHERE\x20uid\x20=\x20?', 'other', 'filter', 'Your\x20plan\x20does\x20not\x20allow\x20to\x20use\x20API\x20', 'email', 'Invalid\x20credentials', 'admin_reply', 'pages', 'templet_id', 'now', 'selected', 'The\x20campaign\x20and\x20data\x20was\x20deleted', 'get', 'SELECT\x20*\x20FROM\x20logs\x20WHERE\x20createdAt\x20>=\x20?\x20and\x20uid\x20=\x20?', 'body', 'split', 'json', '1203056OOluyY', 'api', 'Token\x20expired', 'DELETE\x20FROM\x20scrap_entries\x20WHERE\x20campaign_id\x20=\x20?', 'uid', 'diff', 'DELETE\x20FROM\x20scrap_campaign\x20WHERE\x20campaign_id\x20=\x20?', 'replace', 'UPDATE\x20scrap_campaign\x20SET\x20status\x20=\x20?', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', 'role', '69570ebJJNN', 'map', '9909828AUwZAm', 'mobileLength', 'No\x20token\x20found', 'recovery_email', 'Log(s)\x20were\x20deleted', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20email\x20=\x20?', 'UPDATE\x20user\x20SET\x20password\x20=\x20?\x20WHERE\x20email\x20=\x20?', 'DELETE\x20FROM\x20logs\x20WHERE\x20id\x20IN\x20(?)', 'setMonth', 'New\x20message\x20was\x20sent', 'hash', 'SELECT\x20*\x20FROM\x20phonebook\x20WHERE\x20uid\x20=\x20?', 'text']; _0x314b = function () { return _0x3a0771; }; return _0x314b(); } import { grabData } from '../functions/fun.js'; import _0x41abb7 from 'moment'; const signup = async (_0x57fd22, _0xbe45b7) => { const _0xff1b21 = _0x4ec3; try { const _0x5aa17d = _0x57fd22['body'], _0x4b3fc7 = _0x5aa17d['name'], _0x1ea980 = _0x5aa17d['email'], _0x5da9b0 = _0x5aa17d['password']; if (!_0x4b3fc7 || !_0x1ea980 || !_0x5da9b0) return _0xbe45b7[_0xff1b21(0x105)]({ 'msg': _0xff1b21(0x16a) }); const _0x256cff = await _0x26b268(_0xff1b21(0x118), _0x1ea980); if (_0x256cff[_0xff1b21(0x158)] > 0x0) return _0xbe45b7[_0xff1b21(0x105)]({ 'msg': _0xff1b21(0x15d) }); const _0x22b6cf = await _0x220d35[_0xff1b21(0x11d)](_0x5da9b0, 0xa), _0x336138 = _0x2f6d77[_0xff1b21(0x150)](); await _0x26b268('INSERT\x20INTO\x20user\x20(uid,\x20name,\x20email,\x20password)\x20VALUES\x20(?,?,?,?)', [_0x336138, _0x4b3fc7, _0x1ea980, _0x22b6cf]), _0xbe45b7[_0xff1b21(0x105)]({ 'msg': _0xff1b21(0x154), 'success': !![] }); } catch (_0x1b7ef7) { console[_0xff1b21(0x149)](_0x1b7ef7), _0xbe45b7['json']({ 'msg': _0xff1b21(0x144), 'err': _0x1b7ef7 }); } }, login = async (_0x43faa1, _0x3efd73) => { const _0x5db61a = _0x4ec3; try { const _0x42420e = _0x43faa1[_0x5db61a(0x103)], _0x21c8a8 = _0x42420e[_0x5db61a(0x171)], _0x407216 = _0x42420e['password']; console[_0x5db61a(0x149)](_0x43faa1['body']); if (!_0x21c8a8 || !_0x407216) return _0x3efd73[_0x5db61a(0x105)]({ 'msg': _0x5db61a(0x12b) }); const _0x3615da = await _0x26b268(_0x5db61a(0x118), [_0x21c8a8]); if (_0x3615da[_0x5db61a(0x158)] < 0x1) return _0x3efd73[_0x5db61a(0x105)]({ 'msg': _0x5db61a(0x172) }); const _0x414713 = await _0x220d35[_0x5db61a(0x140)](_0x407216, _0x3615da[0x0][_0x5db61a(0x165)]); if (!_0x414713) return _0x3efd73[_0x5db61a(0x105)]({ 'msg': _0x5db61a(0x172) }); else { const _0xf4b284 = sign({ 'uid': _0x3615da[0x0]['uid'], 'role': _0x5db61a(0x145), 'password': _0x3615da[0x0]['password'], 'email': _0x3615da[0x0][_0x5db61a(0x171)] }, process['env']['JWTKEY'], {}); _0x3efd73[_0x5db61a(0x105)]({ 'success': !![], 'token': _0xf4b284 }); } } catch (_0x8e430d) { console[_0x5db61a(0x149)](_0x8e430d), _0x3efd73[_0x5db61a(0x105)]({ 'msg': _0x5db61a(0x144), 'err': _0x8e430d }); } }, getUserByToken = async (_0x3afc6a, _0x499ccb) => { const _0x4a974c = _0x4ec3; try { const _0x446d60 = await _0x26b268(_0x4a974c(0x10f), [_0x3afc6a[_0x4a974c(0x138)][_0x4a974c(0x10a)]]); _0x499ccb[_0x4a974c(0x105)]({ 'success': !![], 'data': _0x446d60[0x0] }); } catch (_0x5157f8) { console['log'](_0x5157f8), _0x499ccb['json']({ 'msg': _0x4a974c(0x144), 'err': _0x5157f8 }); } }, getMessageLog = async (_0x26205f, _0x561142) => { const _0x48ecbe = _0x4ec3; try { const _0x98e8b2 = await _0x26b268('SELECT\x20*\x20FROM\x20logs\x20WHERE\x20uid\x20=\x20?', [_0x26205f['decode'][_0x48ecbe(0x10a)]]); _0x561142['json']({ 'success': !![], 'data': _0x98e8b2 }); } catch (_0x33d7f6) { console[_0x48ecbe(0x149)](_0x33d7f6), _0x561142['json']({ 'msg': _0x48ecbe(0x144), 'err': _0x33d7f6 }); } }, GenAPI = async (_0x31100a, _0x36b845) => { const _0x433575 = _0x4ec3; try { const _0xe637d2 = await _0x26b268(_0x433575(0x10f), [_0x31100a[_0x433575(0x138)][_0x433575(0x10a)]]), _0x5ed716 = sign({ 'uid': _0xe637d2[0x0][_0x433575(0x10a)], 'role': _0x433575(0x145) }, process[_0x433575(0x15e)][_0x433575(0x162)], {}); await _0x26b268(_0x433575(0x131), [_0x5ed716, _0x31100a['decode'][_0x433575(0x10a)]]), _0x36b845[_0x433575(0x105)]({ 'success': !![], 'token': _0x5ed716, 'msg': _0x433575(0x14f) }); } catch (_0x50b44a) { console[_0x433575(0x149)](_0x50b44a), _0x36b845[_0x433575(0x105)]({ 'msg': _0x433575(0x144), 'err': _0x50b44a }); } }, V2SendMesg = async (_0x29108b, _0x222c04) => { const _0x5a1c51 = _0x4ec3; try { if (!_0x29108b[_0x5a1c51(0x103)][_0x5a1c51(0x164)] || !_0x29108b[_0x5a1c51(0x103)][_0x5a1c51(0x11f)] || !_0x29108b[_0x5a1c51(0x103)][_0x5a1c51(0x130)]) return _0x222c04['json']({ 'msg': _0x5a1c51(0x16a), 'success': ![] }); const _0x189e47 = _0x29108b[_0x5a1c51(0x101)](_0x5a1c51(0x123)); if (!_0x189e47) return _0x222c04[_0x5a1c51(0x105)]({ 'msg': _0x5a1c51(0x115), 'token': _0x189e47, 'logout': !![] }); _0x3541d0[_0x5a1c51(0x121)](_0x189e47['split']('\x20')[0x1], process[_0x5a1c51(0x15e)][_0x5a1c51(0x162)], async (_0x327e27, _0xa0e0bb) => { const _0x42a121 = _0x5a1c51; if (_0x327e27) return _0x222c04[_0x42a121(0x105)]({ 'success': 0x0, 'msg': _0x42a121(0x147), 'token': _0x189e47, 'logout': !![] }); else { const _0xd4d6ad = await _0x26b268(_0x42a121(0x15b), [_0xa0e0bb[_0x42a121(0x10a)]]); if (_0xd4d6ad[0x0][_0x42a121(0x107)] !== _0x189e47[_0x42a121(0x104)]('\x20')[0x1]) return _0x222c04[_0x42a121(0x105)]({ 'msg': 'Your\x20API\x20keys\x20are\x20invalid', 'success': ![] }); const _0x5928e5 = await checkPlanExpiry(_0xa0e0bb[_0x42a121(0x10a)]); if (!_0x5928e5) return _0x222c04['json']({ 'success': ![], 'msg': _0x42a121(0x125) }); const _0x1a3f07 = JSON['parse'](_0xd4d6ad[0x0]?.[_0x42a121(0x15c)])?.[_0x42a121(0x14d)] == 0x1 ? !![] : ![]; if (!_0x1a3f07) return _0x222c04['json']({ 'success': ![], 'msg': _0x42a121(0x170) }); if (_0xd4d6ad[0x0][_0x42a121(0x169)] < 0x1) return _0x222c04[_0x42a121(0x105)]({ 'success': ![], 'msg': _0x42a121(0x127) }); if (_0xd4d6ad['length'] < 0x1) return _0x222c04[_0x42a121(0x105)]({ 'success': ![], 'msg': _0x42a121(0x147), 'token': _0x189e47, 'logout': !![] }); if (_0xd4d6ad[0x0][_0x42a121(0x110)] === _0x42a121(0x145)) { const _0x32148f = { 'text': _0x29108b[_0x42a121(0x103)][_0x42a121(0x11f)] }, _0x29117d = await sendMessageMain(_0x29108b[_0x42a121(0x103)][_0x42a121(0x130)], _0x29108b['body'][_0x42a121(0x164)], _0x32148f, _0xa0e0bb[_0x42a121(0x10a)]); _0x222c04[_0x42a121(0x105)](_0x29117d); } else return _0x222c04['json']({ 'success': 0x0, 'msg': 'Unauthorized\x20token', 'token': _0x189e47, 'logout': !![] }); } }); } catch (_0x42027b) { console[_0x5a1c51(0x149)](_0x42027b), _0x222c04[_0x5a1c51(0x105)]({ 'msg': _0x5a1c51(0x144), 'err': _0x42027b }); } }, V2SendTemp = async (_0x4c3d0a, _0x1b6bc5) => { const _0x2430f8 = _0x4ec3; try { if (!_0x4c3d0a['body'][_0x2430f8(0x164)] || !_0x4c3d0a[_0x2430f8(0x103)][_0x2430f8(0xfd)] || !_0x4c3d0a[_0x2430f8(0x103)][_0x2430f8(0x130)]) return _0x1b6bc5['json']({ 'msg': _0x2430f8(0x16a), 'success': ![] }); const _0xa6abec = _0x4c3d0a[_0x2430f8(0x101)](_0x2430f8(0x123)); if (!_0xa6abec) return _0x1b6bc5['json']({ 'msg': _0x2430f8(0x115), 'token': _0xa6abec, 'logout': !![] }); _0x3541d0['verify'](_0xa6abec[_0x2430f8(0x104)]('\x20')[0x1], process[_0x2430f8(0x15e)][_0x2430f8(0x162)], async (_0x37a0f7, _0x11e37d) => { const _0x4f6642 = _0x2430f8; if (_0x37a0f7) return _0x1b6bc5['json']({ 'success': 0x0, 'msg': 'Invalid\x20token\x20found', 'token': _0xa6abec, 'logout': !![] }); else { const _0x56f75f = await _0x26b268(_0x4f6642(0x15b), [_0x11e37d[_0x4f6642(0x10a)]]); if (_0x56f75f[0x0][_0x4f6642(0x107)] !== _0xa6abec[_0x4f6642(0x104)]('\x20')[0x1]) return _0x1b6bc5[_0x4f6642(0x105)]({ 'msg': _0x4f6642(0x139), 'success': ![] }); const _0x53ad8f = await checkPlanExpiry(_0x11e37d[_0x4f6642(0x10a)]); if (!_0x53ad8f) return _0x1b6bc5[_0x4f6642(0x105)]({ 'success': ![], 'msg': _0x4f6642(0x125) }); const _0x463465 = JSON[_0x4f6642(0x16c)](_0x56f75f[0x0]?.[_0x4f6642(0x15c)])?.[_0x4f6642(0x14d)] == 0x1 ? !![] : ![]; if (!_0x463465) return _0x1b6bc5[_0x4f6642(0x105)]({ 'success': ![], 'msg': 'Your\x20plan\x20does\x20not\x20allow\x20to\x20use\x20API\x20' }); if (_0x56f75f[0x0]['msglimit'] < 0x1) return _0x1b6bc5[_0x4f6642(0x105)]({ 'success': ![], 'msg': _0x4f6642(0x127) }); if (_0x56f75f['length'] < 0x1) return _0x1b6bc5['json']({ 'success': ![], 'msg': _0x4f6642(0x147), 'token': _0xa6abec, 'logout': !![] }); if (_0x56f75f[0x0][_0x4f6642(0x110)] === _0x4f6642(0x145)) { const _0x27c7dd = await _0x26b268(_0x4f6642(0x13d), [_0x4c3d0a[_0x4f6642(0x103)]['templet_id']]); if (_0x27c7dd['length'] < 0x1) return _0x1b6bc5['json']({ 'msg': _0x4f6642(0x132), 'success': ![] }); const _0x319238 = JSON['parse'](_0x27c7dd[0x0]?.['content']), _0x3cad7c = await sendMessageMain(_0x4c3d0a[_0x4f6642(0x103)]['client_id'], _0x4c3d0a['body'][_0x4f6642(0x164)], _0x319238, _0x11e37d['uid']); _0x1b6bc5['json'](_0x3cad7c); } else return _0x1b6bc5[_0x4f6642(0x105)]({ 'success': 0x0, 'msg': 'Unauthorized\x20token', 'token': _0xa6abec, 'logout': !![] }); } }); } catch (_0x464b05) { console[_0x2430f8(0x149)](_0x464b05), _0x1b6bc5[_0x2430f8(0x105)]({ 'msg': _0x2430f8(0x144), 'err': _0x464b05 }); } }, startScrap = async (_0x1c2ade, _0x54fdc9) => { const _0x19cb69 = _0x4ec3; try { function _0x363d77(_0x3a0648) { const _0x228f9e = _0x4ec3; let _0x89246d = _0x3a0648[_0x228f9e(0x10d)](/^(https?:\/\/)?(www\.)?/, ''); return _0x89246d = _0x89246d[_0x228f9e(0x10d)](/\/$/, ''), _0x89246d; } let _0x17a7c0 = 0x1; const _0x3a1694 = Date[_0x19cb69(0xfe)](); if (!_0x1c2ade[_0x19cb69(0x103)]['name'] || !_0x1c2ade['body'][_0x19cb69(0x152)] || _0x1c2ade[_0x19cb69(0x103)]['query']?.[_0x19cb69(0x158)] < 0x1 || _0x1c2ade[_0x19cb69(0x103)][_0x19cb69(0x174)] < 0xa) return _0x54fdc9['json']({ 'msg': _0x19cb69(0x12e) }); const _0x3bebeb = await _0x26b268(_0x19cb69(0x10f), [_0x1c2ade[_0x19cb69(0x138)]['uid']]); if (_0x3bebeb[0x0][_0x19cb69(0x12c)] !== 0x1) return _0x54fdc9['json']({ 'msg': _0x19cb69(0x14c) }); _0x54fdc9[_0x19cb69(0x105)]({ 'success': !![], 'msg': 'You\x20scrapping\x20was\x20started' }), await _0x26b268(_0x19cb69(0x14b), [_0x1c2ade[_0x19cb69(0x138)][_0x19cb69(0x10a)], _0x3a1694, _0x1c2ade['body'][_0x19cb69(0x163)], _0x1c2ade[_0x19cb69(0x103)][_0x19cb69(0x152)], JSON[_0x19cb69(0x12a)](_0x1c2ade[_0x19cb69(0x103)]['query']), _0x19cb69(0x146)]); function _0x3cb0b5(_0x51ed8f) { return new Promise(_0x1945c0 => { setTimeout(() => { _0x1945c0(); }, [_0x51ed8f]); }); } const _0x41deb9 = Math[_0x19cb69(0x166)](_0x1c2ade[_0x19cb69(0x103)][_0x19cb69(0x174)] / 0xa); function _0x5a4cd1(_0x156bdd) { const _0x396e6f = _0x19cb69; return console[_0x396e6f(0x149)]({ 'data': _0x156bdd }), new Promise(async _0x1c38c0 => { const _0x42b290 = _0x396e6f, _0x500eec = _0x156bdd[_0x42b290(0x112)](_0x5b6779 => { const _0x80f936 = _0x42b290; return [_0x3a1694, _0x5b6779['number'], _0x5b6779['email'], _0x5b6779[_0x80f936(0x13a)], _0x5b6779[_0x80f936(0x163)], _0x5b6779[_0x80f936(0x16e)], _0x1c2ade[_0x80f936(0x138)][_0x80f936(0x10a)]]; }); await _0x26b268(_0x42b290(0x13f), [_0x500eec]), _0x1c38c0(); }); } async function _0x110c96() { const _0x1c2044 = _0x19cb69; await _0x3cb0b5(0x7d0), console[_0x1c2044(0x149)]('scrap\x20hit\x20for\x20', _0x17a7c0); const _0x100da2 = await grabData(_0x363d77(_0x1c2ade['body'][_0x1c2044(0x152)]), _0x1c2ade[_0x1c2044(0x103)][_0x1c2044(0x167)], _0x17a7c0, _0x1c2ade[_0x1c2044(0x103)]['countryCode'], _0x1c2ade[_0x1c2044(0x103)][_0x1c2044(0x114)]); _0x100da2[_0x1c2044(0x168)] && (Array['isArray'](_0x100da2[_0x1c2044(0x143)]) && (_0x100da2[_0x1c2044(0x143)]['length'] > 0x0 && _0x5a4cd1(_0x100da2[_0x1c2044(0x143)]))); _0x17a7c0 += 0x1; if (_0x17a7c0 < _0x41deb9 + 0x1) { _0x110c96(); return; } await _0x26b268(_0x1c2044(0x10e), [_0x1c2044(0x137)]), console[_0x1c2044(0x149)](_0x1c2044(0x13b), _0x3a1694); } _0x110c96(); } catch (_0x42b471) { console[_0x19cb69(0x149)](_0x42b471); } }, getScrapCampaign = async (_0x1fd742, _0x546dcb) => { const _0x21af84 = _0x4ec3; try { const _0x5476f8 = await _0x26b268('SELECT\x20*\x20FROM\x20scrap_campaign\x20WHERE\x20uid\x20=\x20?', [_0x1fd742[_0x21af84(0x138)][_0x21af84(0x10a)]]); _0x546dcb[_0x21af84(0x105)]({ 'data': _0x5476f8, 'success': !![] }); } catch (_0xdbe44f) { console['log'](_0xdbe44f), _0x546dcb[_0x21af84(0x105)]({ 'msg': _0x21af84(0x144), 'err': _0xdbe44f }); } }, getScrappingData = async (_0x4c4551, _0x49cfd0) => { const _0x4b2c40 = _0x4ec3; try { const _0x1d19cc = await _0x26b268(_0x4b2c40(0x122), [_0x4c4551['body'][_0x4b2c40(0x12d)], _0x4c4551[_0x4b2c40(0x138)]['uid']]); _0x49cfd0[_0x4b2c40(0x105)]({ 'data': _0x1d19cc, 'success': !![] }); } catch (_0x1c1667) { console[_0x4b2c40(0x149)](_0x1c1667), _0x49cfd0[_0x4b2c40(0x105)]({ 'msg': _0x4b2c40(0x144), 'err': _0x1c1667 }); } }, sendNewPing = async (_0x1a9404, _0x2acbf9) => { const _0x6ab315 = _0x4ec3; try { await _0x26b268(_0x6ab315(0x133), [_0x1a9404[_0x6ab315(0x138)]['uid'], _0x1a9404[_0x6ab315(0x103)]['msg']]), _0x2acbf9['json']({ 'msg': _0x6ab315(0x11c), 'success': !![] }); } catch (_0xd40be2) { console['log'](_0xd40be2), _0x2acbf9[_0x6ab315(0x105)]({ 'msg': 'server\x20error', 'err': _0xd40be2 }); } }, getMyPing = async (_0x2b0db4, _0x5887cf) => { const _0x46f7d5 = _0x4ec3; try { const _0x237b1e = await _0x26b268(_0x46f7d5(0x155), [_0x2b0db4[_0x46f7d5(0x138)]['uid']]); _0x5887cf[_0x46f7d5(0x105)]({ 'data': _0x237b1e, 'success': !![] }); } catch (_0x250dfc) { console[_0x46f7d5(0x149)](_0x250dfc), _0x5887cf[_0x46f7d5(0x105)]({ 'msg': _0x46f7d5(0x144), 'err': _0x250dfc }); } }, getDash = async (_0x2c5040, _0x2f86fc) => { const _0x2c38ab = _0x4ec3; try { const _0xec1bc1 = await _0x26b268(_0x2c38ab(0x13c), [_0x2c5040[_0x2c38ab(0x138)][_0x2c38ab(0x10a)]]), _0x4b6e18 = _0xec1bc1[0x0][_0x2c38ab(0x15c)] ? JSON[_0x2c38ab(0x16c)](_0xec1bc1[0x0][_0x2c38ab(0x15c)])['name'] : ![], _0x9ef17f = _0x4b6e18 ? _0xec1bc1[0x0][_0x2c38ab(0x169)] : 0x0, _0xb2eccf = _0x4b6e18 ? _0xec1bc1[0x0]['contactlimit'] : 0x0, _0x44bad0 = _0x4b6e18 ? _0xec1bc1[0x0][_0x2c38ab(0x15f)] : 0x0, _0x111030 = _0x4b6e18 ? _0xec1bc1[0x0][_0x2c38ab(0x12f)] : ![], _0x17a12f = _0x4b6e18 ? _0xec1bc1[0x0]['allow_data_extract'] : ![], _0x4bc22f = _0x4b6e18[_0x2c38ab(0x14d)] == 0x1 ? !![] : ![], _0x294018 = _0x4b6e18 ? JSON[_0x2c38ab(0x16c)](_0xec1bc1[0x0][_0x2c38ab(0x15c)])[_0x2c38ab(0x15a)] : 0x0, _0x38884f = await _0x26b268('SELECT\x20*\x20FROM\x20templet\x20WHERE\x20uid\x20=\x20?', [_0x2c5040[_0x2c38ab(0x138)]['uid']]), _0x4c3605 = await _0x26b268('SELECT\x20*\x20FROM\x20instance\x20WHERE\x20uid\x20=\x20?', [_0x2c5040[_0x2c38ab(0x138)][_0x2c38ab(0x10a)]]), _0xcb5e95 = await _0x26b268(_0x2c38ab(0x160), [_0x2c5040[_0x2c38ab(0x138)][_0x2c38ab(0x10a)], 0x1]), _0x473e01 = _0x4b6e18 ? _0xec1bc1[0x0][_0x2c38ab(0x12c)] : ![], _0x450d6f = await _0x26b268(_0x2c38ab(0x155), [_0x2c5040['decode']['uid']]), _0x232093 = _0x450d6f?.[_0x2c38ab(0x16f)](_0x3e5051 => _0x3e5051[_0x2c38ab(0x173)] !== null), _0x183f11 = await _0x26b268(_0x2c38ab(0x11e), [_0x2c5040[_0x2c38ab(0x138)]['uid']]), _0x4a3f5b = await _0x26b268(_0x2c38ab(0x16d), [_0x2c5040[_0x2c38ab(0x138)][_0x2c38ab(0x10a)]]), _0x2bf790 = new Date(Date[_0x2c38ab(0xfe)]() - 0x18 * 0x3c * 0x3c * 0x3e8), _0x121887 = _0x2bf790[_0x2c38ab(0x129)]()[_0x2c38ab(0x153)](0x0, 0x13)[_0x2c38ab(0x10d)]('T', '\x20'), _0x3d472e = await _0x26b268(_0x2c38ab(0x102), [_0x121887, _0x2c5040[_0x2c38ab(0x138)]['uid']]), _0x34353f = new Date(); _0x34353f[_0x2c38ab(0x11b)](_0x34353f['getMonth']() - 0x1); const _0x50a2fd = _0x34353f[_0x2c38ab(0x129)]()[_0x2c38ab(0x153)](0x0, 0x13)['replace']('T', '\x20'), _0x67ecf0 = await _0x26b268(_0x2c38ab(0x102), [_0x50a2fd, _0x2c5040['decode'][_0x2c38ab(0x10a)]]), _0x5f4952 = new Date(); _0x5f4952[_0x2c38ab(0x124)](_0x5f4952['getFullYear']() - 0x1); const _0x15dce6 = _0x5f4952['toISOString']()[_0x2c38ab(0x153)](0x0, 0x13)[_0x2c38ab(0x10d)]('T', '\x20'), _0x7b413d = await _0x26b268(_0x2c38ab(0x102), [_0x15dce6, _0x2c5040[_0x2c38ab(0x138)][_0x2c38ab(0x10a)]]), _0x1bbfc7 = await _0x26b268(_0x2c38ab(0x13e), [_0x2c5040['decode'][_0x2c38ab(0x10a)]]); _0x2f86fc[_0x2c38ab(0x105)]({ 'success': !![], 'plan': _0x4b6e18, 'leftMsg': _0x9ef17f, 'contactLimit': _0xb2eccf, 'templetLimit': _0x44bad0, 'allowmultiInstance': _0x111030, 'allowDataScrap': _0x17a12f, 'allowAPI': _0x4bc22f, 'templets': _0x38884f['length'], 'instances': _0x4c3605['length'], 'scrapCampaig': _0x473e01[_0x2c38ab(0x158)], 'pendingPing': _0x232093[_0x2c38ab(0x158)], 'phonebook': _0x183f11[_0x2c38ab(0x158)], 'contacts': _0x4a3f5b[_0x2c38ab(0x158)], 'dailyDataLogs': _0x3d472e['length'], 'monthBasedOrderLogs': _0x67ecf0['length'], 'yearBasedOrdersLogs': _0x7b413d[_0x2c38ab(0x158)], 'allowedIns': _0x294018, 'totalSent': _0x1bbfc7[_0x2c38ab(0x158)], 'bots': _0xcb5e95[_0x2c38ab(0x158)] }); } catch (_0x57ab21) { console[_0x2c38ab(0x149)](_0x57ab21), _0x2f86fc[_0x2c38ab(0x105)]({ 'msg': _0x2c38ab(0x144), 'err': _0x57ab21 }); } }, updateUser = async (_0x164fb7, _0x2c858b) => { const _0x3c2ee8 = _0x4ec3; try { if (_0x164fb7[_0x3c2ee8(0x103)][_0x3c2ee8(0x161)]) { const _0x60509b = await _0x220d35[_0x3c2ee8(0x11d)](_0x164fb7['body'][_0x3c2ee8(0x161)], 0xa); await _0x26b268(_0x3c2ee8(0x126), [_0x164fb7[_0x3c2ee8(0x103)]['email'], _0x60509b, _0x164fb7[_0x3c2ee8(0x138)][_0x3c2ee8(0x10a)]]), _0x2c858b[_0x3c2ee8(0x105)]({ 'success': !![], 'msg': 'Admin\x20was\x20updated\x20refresh\x20the\x20page' }); } else await _0x26b268(_0x3c2ee8(0x134), [_0x164fb7['body'][_0x3c2ee8(0x171)], _0x164fb7[_0x3c2ee8(0x138)][_0x3c2ee8(0x10a)]]), _0x2c858b[_0x3c2ee8(0x105)]({ 'success': !![], 'msg': _0x3c2ee8(0x135) }); } catch (_0x26949b) { console[_0x3c2ee8(0x149)](_0x26949b), _0x2c858b['json']({ 'msg': _0x3c2ee8(0x144), 'err': _0x26949b }); } }, userRecovery = async (_0x526e98, _0x1ed60d) => { const _0x199a62 = _0x4ec3; try { const _0x5c4508 = await _0x26b268(_0x199a62(0x118), [_0x526e98[_0x199a62(0x103)][_0x199a62(0x116)]]); if (_0x5c4508[_0x199a62(0x158)] < 0x1) return _0x1ed60d['json']({ 'success': ![], 'msg': _0x199a62(0x141) }); await sendRecoveryEmail(_0x5c4508[0x0], _0x199a62(0x145), _0x526e98), _0x1ed60d[_0x199a62(0x105)]({ 'success': !![], 'msg': _0x199a62(0x141) }); } catch (_0x50280d) { console[_0x199a62(0x149)](_0x50280d), _0x1ed60d[_0x199a62(0x105)]({ 'msg': _0x199a62(0x144), 'err': _0x50280d }); } }, updateRecoverPass = async (_0x521be9, _0x459d46) => { const _0x2012f2 = _0x4ec3; try { if (!_0x521be9[_0x2012f2(0x103)][_0x2012f2(0x165)]) return _0x459d46[_0x2012f2(0x105)]({ 'success': ![], 'msg': _0x2012f2(0x14e) }); if (_0x41abb7(_0x521be9[_0x2012f2(0x138)][_0x2012f2(0x142)])[_0x2012f2(0x10b)](_0x41abb7(new Date()), 'hours') > 0x1) return _0x459d46[_0x2012f2(0x105)]({ 'success': ![], 'msg': _0x2012f2(0x108) }); const _0x27e25a = await _0x220d35[_0x2012f2(0x11d)](_0x521be9['body'][_0x2012f2(0x165)], 0xa), _0x5bd4c9 = await _0x26b268(_0x2012f2(0x119), [_0x27e25a, _0x521be9['decode'][_0x2012f2(0x157)]]); _0x459d46[_0x2012f2(0x105)]({ 'success': !![], 'msg': _0x2012f2(0x151), 'data': _0x5bd4c9 }); } catch (_0x445b16) { console[_0x2012f2(0x149)](_0x445b16), _0x459d46[_0x2012f2(0x105)]({ 'msg': _0x2012f2(0x144), 'err': _0x445b16 }); } }, delScrapping = async (_0x44156a, _0x7bd9b0) => { const _0x4bb87c = _0x4ec3; try { await _0x26b268(_0x4bb87c(0x10c), [_0x44156a[_0x4bb87c(0x103)][_0x4bb87c(0x12d)]]), await _0x26b268(_0x4bb87c(0x109), [_0x44156a[_0x4bb87c(0x103)][_0x4bb87c(0x12d)]]), _0x7bd9b0[_0x4bb87c(0x105)]({ 'success': !![], 'msg': _0x4bb87c(0x100) }); } catch (_0x1c0aff) { console[_0x4bb87c(0x149)](_0x1c0aff), _0x7bd9b0[_0x4bb87c(0x105)]({ 'msg': _0x4bb87c(0x144), 'err': _0x1c0aff }); } }, delLogs = async (_0x2724c7, _0x214266) => { const _0x4d2602 = _0x4ec3; try { await _0x26b268(_0x4d2602(0x11a), [_0x2724c7[_0x4d2602(0x103)][_0x4d2602(0xff)]]), _0x214266[_0x4d2602(0x105)]({ 'success': !![], 'msg': _0x4d2602(0x117) }); } catch (_0x1f08c4) { console['log'](_0x1f08c4), _0x214266[_0x4d2602(0x105)]({ 'msg': 'server\x20error', 'err': _0x1f08c4 }); } }; export { signup, login, delLogs, delScrapping, getDash, userRecovery, updateUser, updateRecoverPass, sendNewPing, getMyPing, getScrapCampaign, getScrappingData, startScrap, getUserByToken, getMessageLog, GenAPI, V2SendMesg, V2SendTemp };
function _0xf382() { const _0x491484 = ['53385bWmgpG', 'single', 'json', 'Message\x20was\x20sent', '961606BNnBrf', 'manual', 'body', 'log', '1ibYnwE', 'The\x20templet\x20was\x20saved', 'filename', 'content', 'The\x20message\x20was\x20sent', 'hit', 'null', 'msg', 'scheduleTimestamp', 'msgLeft', '\x20left\x20in\x20your\x20account\x20and\x20your\x20templet\x20has\x20', 'false', 'max', 'please\x20send\x20all\x20required\x20fields', 'fromTemplet', 'length', '@tagall', 'three', 'cwd', 'server\x20error', '456591XzXjxA', 'allow_multi_instance', 'schedule', '6645303CmAeWQ', '3075224awYYcI', 'UPDATE\x20user\x20SET\x20msglimit\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'files', 'split', 'true', 'DD/MM/YY\x20hh:mm', 'phoneBookName', 'You\x20have\x20', 'SELECT\x20*\x20FROM\x20templet\x20WHERE\x20id\x20=\x20?', 'type', 'groupData', 'manual\x20message', 'test', 'Your\x20campaign\x20was\x20scheduled', 'campaignName', 'file', 'mobile', '/client/public/media/', 'saveAsTemplet', '45hbXVrg', 'format', '44LxSbWO', 'Your\x20plan\x20does\x20not\x20allow\x20yout\x20to\x20use\x20multi\x20instance\x20please\x20use\x20one\x20instance', 'now', 'one', 'uid', 'replace', 'decode', 'group', 'Please\x20send\x20file', 'message', 'name', 'No\x20client\x20ID\x20found', 'pelase\x20send\x20all\x20required\x20fields', '1027304GFqRgw', 'client_id', '24lLrzjZ', 'INSERT\x20INTO\x20campaign\x20(uid,\x20campaign_id,\x20name,\x20templet_id,\x20phonebook_name,\x20status\x20)\x20VALUES\x20(?,?,?,?,?,?)\x20', 'selectedTemplet', 'UPDATE\x20campaign\x20SET\x20status\x20=\x20?\x20WHERE\x20campaign_id\x20=\x20?\x20', 'onlySave', 'map', 'typedMsg', 'random', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', 'sending_type', '1453250uZBfbN', 'substring', 'msglimit', 'three\x202', 'templetID']; _0xf382 = function () { return _0x491484; }; return _0xf382(); } (function (_0x2df70b, _0x39c7b8) { const _0x266f13 = _0xb129, _0x380d7a = _0x2df70b(); while (!![]) { try { const _0x964d46 = parseInt(_0x266f13(0x10b)) / 0x1 * (parseInt(_0x266f13(0x107)) / 0x2) + parseInt(_0x266f13(0x11f)) / 0x3 + parseInt(_0x266f13(0x123)) / 0x4 + parseInt(_0x266f13(0x103)) / 0x5 * (parseInt(_0x266f13(0x147)) / 0x6) + -parseInt(_0x266f13(0x122)) / 0x7 + -parseInt(_0x266f13(0x145)) / 0x8 * (-parseInt(_0x266f13(0x136)) / 0x9) + -parseInt(_0x266f13(0x151)) / 0xa * (parseInt(_0x266f13(0x138)) / 0xb); if (_0x964d46 === _0x39c7b8) break; else _0x380d7a['push'](_0x380d7a['shift']()); } catch (_0x447a7b) { _0x380d7a['push'](_0x380d7a['shift']()); } } }(_0xf382, 0x87bae)); import { sendMessageMain, saveAsTemplet, addMessageLog, sendMediaMessage, checkLeftMessage, runCampaign } from '../functions/function.js'; import _0x421a9d from '../database/dbpromise.js'; import _0x105bb2 from 'moment'; import { getSession, formatPhone, sendMessage, isExists, getGroupData } from '../whatsapp.js'; function _0xb129(_0x27d1cf, _0x414ad3) { const _0xf3828c = _0xf382(); return _0xb129 = function (_0xb1291a, _0x3dcc29) { _0xb1291a = _0xb1291a - 0xff; let _0x2742f5 = _0xf3828c[_0xb1291a]; return _0x2742f5; }, _0xb129(_0x27d1cf, _0x414ad3); } const sendMessageFunction = async (_0x2f8df2, _0x20da81) => { const _0x5b2d99 = _0xb129; try { if (!_0x2f8df2['body'][_0x5b2d99(0x10e)] || !_0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x133)] || !_0x2f8df2['body'][_0x5b2d99(0x146)]) return _0x20da81[_0x5b2d99(0x105)]({ 'msg': _0x5b2d99(0x144) }); if (_0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x135)] && !_0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x119)]) { await saveAsTemplet(_0x2f8df2['decode'][_0x5b2d99(0x13c)], _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x142)] || 'NA', _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x10e)], _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x12c)] || 'NA'); if (_0x2f8df2['body'][_0x5b2d99(0x14b)]) return _0x20da81[_0x5b2d99(0x105)]({ 'msg': _0x5b2d99(0x10c), 'success': !![] }); } await addMessageLog(_0x2f8df2[_0x5b2d99(0x13e)][_0x5b2d99(0x13c)], _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x133)], _0x2f8df2['body'][_0x5b2d99(0x10e)], _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x12c)] || 'NA', _0x5b2d99(0x104)), console[_0x5b2d99(0x10a)](_0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x10e)]), await sendMessageMain(_0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x146)], _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x133)], _0x2f8df2[_0x5b2d99(0x109)][_0x5b2d99(0x10e)], _0x2f8df2[_0x5b2d99(0x13e)][_0x5b2d99(0x13c)]), _0x20da81['json']({ 'msg': _0x5b2d99(0x10f), 'success': !![] }); } catch (_0x385ce4) { _0x20da81[_0x5b2d99(0x105)]({ 'err': _0x385ce4, 'msg': _0x5b2d99(0x11e) }), console[_0x5b2d99(0x10a)](_0x385ce4); } }, sendMessageWithMedia = async (_0x5f2b61, _0x53d42f) => { const _0x5ec5ec = _0xb129; try { console[_0x5ec5ec(0x10a)](_0x5ec5ec(0x110)); if (!_0x5f2b61[_0x5ec5ec(0x109)]['mobile'] || !_0x5f2b61[_0x5ec5ec(0x109)]['client_id']) return _0x53d42f[_0x5ec5ec(0x105)]({ 'msg': 'Please\x20send\x20required\x20fields' }); if (_0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x119)] === _0x5ec5ec(0x116)) { if (!_0x5f2b61['files'][_0x5ec5ec(0x132)]) return _0x53d42f[_0x5ec5ec(0x105)]({ 'msg': _0x5ec5ec(0x140) }); } let _0x68f0c5 = ''; if (_0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x119)] === _0x5ec5ec(0x127)) _0x68f0c5 = _0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x10d)]; else { if (_0x5f2b61[_0x5ec5ec(0x125)]) { if (_0x5f2b61[_0x5ec5ec(0x125)][_0x5ec5ec(0x132)] !== undefined) { const _0x47e72e = _0x5f2b61[_0x5ec5ec(0x125)][_0x5ec5ec(0x132)]; _0x68f0c5 = ('' + Math[_0x5ec5ec(0x14e)]())[_0x5ec5ec(0xff)](0x2, 0x7) + Date[_0x5ec5ec(0x13a)]() + _0x47e72e[_0x5ec5ec(0x142)]; const _0x4e8862 = process[_0x5ec5ec(0x11d)](); _0x47e72e['mv'](_0x4e8862 + _0x5ec5ec(0x134) + _0x68f0c5, _0x3d23c4 => { if (_0x3d23c4) return console['log'](_0x3d23c4), _0x53d42f['json']({ 'err': _0x3d23c4 }); }); } else return _0x53d42f['json']({ 'msg': 'Please\x20send\x20file' }); } } const _0x1b38e5 = await sendMediaMessage(_0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x146)], _0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x133)], _0x68f0c5, _0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x141)] == _0x5ec5ec(0x111) ? '' : _0x5f2b61[_0x5ec5ec(0x109)][_0x5ec5ec(0x141)], _0x5f2b61[_0x5ec5ec(0x13e)][_0x5ec5ec(0x13c)], _0x5f2b61['body']['type'], _0x5f2b61); _0x53d42f[_0x5ec5ec(0x105)]({ 'msg': _0x1b38e5[_0x5ec5ec(0x112)], 'success': !![] }); } catch (_0x145c13) { console[_0x5ec5ec(0x10a)](_0x145c13), _0x53d42f[_0x5ec5ec(0x105)]({ 'msg': _0x5ec5ec(0x11e), 'err': _0x145c13 }); } }, sendBulkTask = async (_0x437538, _0x4d07d4) => { const _0x522f6f = _0xb129; try { function _0x13436e(_0x51f0bd) { return new Promise(_0x4c1c58 => { const _0x3d4690 = _0xb129, _0x1057e4 = new Date(_0x51f0bd)['getTime'](), _0xb4ae9e = Date['now'](), _0x3a78b1 = Math[_0x3d4690(0x117)](_0x1057e4 - _0xb4ae9e, 0x0); setTimeout(_0x4c1c58, _0x3a78b1); }); } const _0x4afed6 = Date[_0x522f6f(0x13a)](); console['log'](_0x522f6f(0x13b)); _0x437538[_0x522f6f(0x109)][_0x522f6f(0x150)] === _0x522f6f(0x108) && (_0x437538['body']['templetID'] = _0x522f6f(0x12e)); if (!_0x437538[_0x522f6f(0x109)]['campaignName'] || !_0x437538[_0x522f6f(0x109)]['templetID'] || !_0x437538[_0x522f6f(0x109)][_0x522f6f(0x129)] || _0x437538[_0x522f6f(0x109)][_0x522f6f(0x146)][_0x522f6f(0x11a)] < 0x1) return _0x4d07d4[_0x522f6f(0x105)]({ 'msg': _0x522f6f(0x118) }); console[_0x522f6f(0x10a)]('two'); if (_0x437538[_0x522f6f(0x109)]['client_id']?.['length'] > 0x1) { const _0x16e5c6 = await _0x421a9d(_0x522f6f(0x14f), _0x437538[_0x522f6f(0x13e)][_0x522f6f(0x13c)]); if (_0x16e5c6[0x0][_0x522f6f(0x120)] !== 0x1) return _0x4d07d4['json']({ 'msg': _0x522f6f(0x139) }); } const _0x52229 = await _0x421a9d('SELECT\x20*\x20FROM\x20phonebook_contacts\x20WHERE\x20phonebook_name\x20=\x20?\x20and\x20uid\x20=\x20?\x20', [_0x437538['body']['phoneBookName'], _0x437538[_0x522f6f(0x13e)][_0x522f6f(0x13c)]]), _0x19bc68 = await checkLeftMessage(_0x437538['decode'][_0x522f6f(0x13c)]); console[_0x522f6f(0x10a)](_0x522f6f(0x11c)); const _0x44239a = await _0x421a9d(_0x522f6f(0x12b), [_0x437538['body']['templetID']]); console[_0x522f6f(0x10a)](_0x522f6f(0x101)); if (_0x19bc68[_0x522f6f(0x114)] < _0x52229['length']) return _0x4d07d4[_0x522f6f(0x105)]({ 'msg': _0x522f6f(0x12a) + _0x19bc68[_0x522f6f(0x114)] + _0x522f6f(0x115) + _0x52229['length'] + '\x20please\x20upgrade\x20or\x20reduce\x20numbers' }); if (!_0x437538[_0x522f6f(0x109)][_0x522f6f(0x121)]) { const _0x13edd8 = new Date(); _0x437538[_0x522f6f(0x109)][_0x522f6f(0x113)] = _0x13edd8; } console[_0x522f6f(0x10a)](_0x437538[_0x522f6f(0x109)][_0x522f6f(0x113)]), await _0x421a9d(_0x522f6f(0x148), [_0x437538[_0x522f6f(0x13e)][_0x522f6f(0x13c)], _0x4afed6, _0x437538[_0x522f6f(0x109)][_0x522f6f(0x131)], _0x437538['body'][_0x522f6f(0x102)], _0x437538[_0x522f6f(0x109)]['phoneBookName'], 'scheduled\x20for\x20' + _0x105bb2(_0x437538['body'][_0x522f6f(0x113)])[_0x522f6f(0x137)](_0x522f6f(0x128))]); const _0x2c3708 = _0x437538[_0x522f6f(0x109)][_0x522f6f(0x150)] == _0x522f6f(0x108) ? { 'text': _0x437538[_0x522f6f(0x109)][_0x522f6f(0x14d)] } : JSON['parse'](_0x44239a[0x0]?.[_0x522f6f(0x10e)]); _0x4d07d4['json']({ 'msg': _0x522f6f(0x130), 'success': !![] }), await _0x13436e(_0x437538[_0x522f6f(0x109)][_0x522f6f(0x113)]); const _0x49bfcf = _0x437538[_0x522f6f(0x109)]['client_id']?.[_0x522f6f(0x14c)](_0x1f0bc4 => _0x1f0bc4['client_id']), _0x109a78 = await runCampaign(_0x437538[_0x522f6f(0x13e)][_0x522f6f(0x13c)], _0x2c3708, _0x52229, _0x49bfcf, _0x437538, _0x4afed6); await _0x421a9d(_0x522f6f(0x14a), [_0x109a78[_0x522f6f(0x112)], _0x4afed6]), console[_0x522f6f(0x10a)]({ 'status': _0x109a78 }); } catch (_0x39e321) { console[_0x522f6f(0x10a)](_0x39e321); } }, sendToGroup = async (_0x522ab4, _0x3cecbc) => { const _0x5930f6 = _0xb129; try { function _0x5d688e(_0x3081a4) { const _0x18f408 = _0xb129, _0x1a1f51 = /@tagall/i; return _0x1a1f51[_0x18f408(0x12f)](_0x3081a4); } if (_0x522ab4['body'][_0x5930f6(0x12c)] == _0x5930f6(0x12c)) { if (_0x5d688e(_0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x14d)])) { let _0x5ae952 = []; const _0x2ebf64 = getSession(_0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x146)]); let _0x4d8f42 = _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x14d)] + '\x0a\x0a' || ''; const _0x5176d3 = await getGroupData(_0x2ebf64, _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x12d)]?.['id']); _0x5ae952 = _0x5176d3?.['participants'], _0x5ae952['forEach'](_0x134b31 => { const _0x10558b = _0x5930f6; _0x4d8f42 += '@' + _0x134b31['id'][_0x10558b(0x126)]('@')[0x0] + '\x20'; }); let _0x1d91d1 = []; for (let _0x5f878f of _0x5176d3?.['participants']) { _0x1d91d1['push'](_0x5f878f['id']); } await sendMessage(_0x2ebf64, _0x522ab4['body'][_0x5930f6(0x12d)]?.['id'], { 'text': _0x4d8f42[_0x5930f6(0x13d)](_0x5930f6(0x11b), ''), 'mentions': _0x1d91d1 }), await addMessageLog(_0x522ab4[_0x5930f6(0x13e)][_0x5930f6(0x13c)], _0x522ab4[_0x5930f6(0x109)]['groupData']?.[_0x5930f6(0x142)] || 'NA', { 'text': _0x4d8f42 }, _0x522ab4['body'][_0x5930f6(0x12c)] || 'NA', 'group'); const _0x1df9d7 = await _0x421a9d(_0x5930f6(0x14f), [_0x522ab4[_0x5930f6(0x13e)]['uid']]), _0xcefee8 = parseInt(_0x1df9d7[0x0][_0x5930f6(0x100)]), _0x5a2523 = _0xcefee8 - 0x1; await _0x421a9d(_0x5930f6(0x124), [_0x5a2523, _0x522ab4[_0x5930f6(0x13e)]['uid']]), _0x3cecbc[_0x5930f6(0x105)]({ 'success': !![], 'msg': _0x5930f6(0x106) }); } else { const _0x3a2747 = getSession(_0x522ab4['body'][_0x5930f6(0x146)]); await sendMessage(_0x3a2747, _0x522ab4[_0x5930f6(0x109)]['groupData']?.['id'], { 'text': _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x14d)] }), await addMessageLog(_0x522ab4[_0x5930f6(0x13e)]['uid'], _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x12d)]?.[_0x5930f6(0x142)], { 'text': _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x14d)] }, _0x522ab4['body'][_0x5930f6(0x12c)] || 'NA', 'group'); const _0x3eaa86 = await _0x421a9d(_0x5930f6(0x14f), [_0x522ab4[_0x5930f6(0x13e)]['uid']]), _0xd2140a = parseInt(_0x3eaa86[0x0][_0x5930f6(0x100)]), _0x21cf85 = _0xd2140a - 0x1; await _0x421a9d(_0x5930f6(0x124), [_0x21cf85, _0x522ab4[_0x5930f6(0x13e)][_0x5930f6(0x13c)]]), _0x3cecbc[_0x5930f6(0x105)]({ 'success': !![], 'msg': _0x5930f6(0x106) }); } } else { const _0x470935 = getSession(_0x522ab4['body'][_0x5930f6(0x146)]); await sendMessage(_0x470935, _0x522ab4['body'][_0x5930f6(0x12d)]?.['id'], _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x149)]), await addMessageLog(_0x522ab4['decode'][_0x5930f6(0x13c)], _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x12d)]?.[_0x5930f6(0x142)], _0x522ab4[_0x5930f6(0x109)][_0x5930f6(0x149)], _0x522ab4['body'][_0x5930f6(0x12c)] || 'NA', _0x5930f6(0x13f)); const _0x37be12 = await _0x421a9d(_0x5930f6(0x14f), [_0x522ab4[_0x5930f6(0x13e)][_0x5930f6(0x13c)]]), _0x5edb09 = parseInt(_0x37be12[0x0][_0x5930f6(0x100)]), _0x4559ad = _0x5edb09 - 0x1; await _0x421a9d(_0x5930f6(0x124), [_0x4559ad, _0x522ab4[_0x5930f6(0x13e)]['uid']]), _0x3cecbc[_0x5930f6(0x105)]({ 'success': !![], 'msg': 'Message\x20was\x20sent' }); } } catch (_0x2c8b93) { console[_0x5930f6(0x10a)](_0x2c8b93), _0x3cecbc[_0x5930f6(0x105)]({ 'err': _0x2c8b93, 'msg': 'server\x20error' }); } }, getGroupsData = async (_0x9430f7, _0xab357b) => { const _0x510730 = _0xb129; try { if (!_0x9430f7[_0x510730(0x109)][_0x510730(0x146)]) return _0xab357b['json']({ 'msg': _0x510730(0x143) }); const _0xcbacd2 = getSession(_0x9430f7['body'][_0x510730(0x146)]), _0x50b61f = await getGroupData(_0xcbacd2, _0x9430f7['body']['jid']); _0xab357b[_0x510730(0x105)]({ 'data': _0x50b61f, 'success': !![] }); } catch (_0x3d1428) { console[_0x510730(0x10a)](_0x3d1428), _0xab357b['json']({ 'err': _0x3d1428, 'msg': 'server\x20error' }); } }; export { sendMessageFunction, sendMessageWithMedia, sendBulkTask, sendToGroup, getGroupsData };
(function (_0x22ccb5, _0x590b54) { const _0x7bb6a1 = _0x46c7, _0x41dbe2 = _0x22ccb5(); while (!![]) { try { const _0x3a8800 = parseInt(_0x7bb6a1(0x15c)) / 0x1 + parseInt(_0x7bb6a1(0x174)) / 0x2 * (parseInt(_0x7bb6a1(0x184)) / 0x3) + -parseInt(_0x7bb6a1(0x17e)) / 0x4 + parseInt(_0x7bb6a1(0x163)) / 0x5 + parseInt(_0x7bb6a1(0x178)) / 0x6 + parseInt(_0x7bb6a1(0x164)) / 0x7 + -parseInt(_0x7bb6a1(0x167)) / 0x8; if (_0x3a8800 === _0x590b54) break; else _0x41dbe2['push'](_0x41dbe2['shift']()); } catch (_0x4035c8) { _0x41dbe2['push'](_0x41dbe2['shift']()); } } }(_0x28e7, 0xba8f5)); import _0x4c1dcf from '../database/dbpromise.js'; import _0x3f13f7 from 'csvtojson'; function _0x46c7(_0x2d2dd3, _0x407051) { const _0x28e7ae = _0x28e7(); return _0x46c7 = function (_0x46c721, _0x4a11c2) { _0x46c721 = _0x46c721 - 0x155; let _0x33242c = _0x28e7ae[_0x46c721]; return _0x33242c; }, _0x46c7(_0x2d2dd3, _0x407051); } const addPhoneBook = async (_0x5f5ca9, _0x5be317) => { const _0xee9595 = _0x46c7; try { const _0x4dc71f = await _0x4c1dcf(_0xee9595(0x15d), [_0x5f5ca9[_0xee9595(0x187)][_0xee9595(0x175)], _0x5f5ca9[_0xee9595(0x162)][_0xee9595(0x165)]]); if (_0x4dc71f[_0xee9595(0x179)] > 0x0) return _0x5be317[_0xee9595(0x15b)]({ 'msg': _0xee9595(0x15e) }); const _0x48052e = await _0x4c1dcf(_0xee9595(0x18c), [_0x5f5ca9['decode'][_0xee9595(0x165)], _0x5f5ca9['body'][_0xee9595(0x175)]]); _0x5be317['json']({ 'data': _0x48052e, 'success': !![] }); } catch (_0x13f8b6) { _0x5be317['json']({ 'err': _0x13f8b6, 'msg': _0xee9595(0x189) }), console['log'](_0x13f8b6); } }; function validateNumbers(_0x438a44) { const _0x23a80d = _0x46c7, _0x3aeefe = /^\d+$/; for (const _0x401bec of _0x438a44) { if (!_0x3aeefe[_0x23a80d(0x172)](_0x401bec)) return ![]; } return !![]; } function convertStringToArray(_0x4668dd) { const _0x463922 = _0x46c7, _0x4f6893 = _0x4668dd[_0x463922(0x16b)]('\x0a')[_0x463922(0x192)](_0x365b0a => _0x365b0a[_0x463922(0x16c)]()); return _0x4f6893; } const addPhoneNumPaste = async (_0x547e92, _0x34a8e5) => { const _0x1ddf3a = _0x46c7; try { const _0x4f31f9 = convertStringToArray(_0x547e92[_0x1ddf3a(0x187)][_0x1ddf3a(0x18b)]); if (_0x4f31f9[_0x1ddf3a(0x179)] < 0x1) return _0x34a8e5[_0x1ddf3a(0x15b)]({ 'msg': _0x1ddf3a(0x17a) }); const _0x1941da = validateNumbers(_0x4f31f9); if (!_0x1941da) return _0x34a8e5[_0x1ddf3a(0x15b)]({ 'msg': _0x1ddf3a(0x166) }); const _0x5a21a2 = _0x4f31f9[_0x1ddf3a(0x192)](_0x4f7f17 => [_0x547e92[_0x1ddf3a(0x162)]['uid'], 'NA', _0x547e92['body']['phonebookName'], _0x4f7f17]); await _0x4c1dcf(_0x1ddf3a(0x17d), [_0x5a21a2]), setTimeout(async () => { await _0x4c1dcf('DELETE\x20FROM\x20phonebook_contacts\x20WHERE\x20mobile\x20IS\x20NULL', []); }, 0xbb8), _0x34a8e5[_0x1ddf3a(0x15b)]({ 'msg': _0x1ddf3a(0x159), 'success': !![] }); } catch (_0x233a8f) { _0x34a8e5['json']({ 'err': _0x233a8f, 'msg': _0x1ddf3a(0x189) }), console[_0x1ddf3a(0x18a)](_0x233a8f); } }, getPhoneBook = async (_0x39d111, _0x55482c) => { const _0x683e4f = _0x46c7; try { const _0x314239 = await _0x4c1dcf(_0x683e4f(0x168), [_0x39d111[_0x683e4f(0x162)]['uid']]); _0x55482c[_0x683e4f(0x15b)]({ 'data': _0x314239, 'success': !![] }); } catch (_0x512009) { _0x55482c[_0x683e4f(0x15b)]({ 'err': _0x512009, 'msg': _0x683e4f(0x189) }), console[_0x683e4f(0x18a)](_0x512009); } }, deletePhoneBook = async (_0x3f602f, _0x52b989) => { const _0x3d9bb3 = _0x46c7; try { const _0x48c5e5 = await _0x4c1dcf('SELECT\x20*\x20FROM\x20phonebook\x20WHERE\x20id\x20=?', [_0x3f602f['body']['id']]), _0x242c5a = await _0x4c1dcf(_0x3d9bb3(0x186), [_0x48c5e5[0x0]['name']]); if (_0x242c5a[_0x3d9bb3(0x179)] > 0x0) return _0x52b989[_0x3d9bb3(0x15b)]({ 'msg': _0x3d9bb3(0x188) }); await _0x4c1dcf(_0x3d9bb3(0x18f), [_0x3f602f[_0x3d9bb3(0x187)]['id']]), _0x52b989[_0x3d9bb3(0x15b)]({ 'msg': _0x3d9bb3(0x161), 'success': !![] }); } catch (_0x3eb97f) { _0x52b989['json']({ 'err': _0x3eb97f, 'msg': _0x3d9bb3(0x189) }), console[_0x3d9bb3(0x18a)](_0x3eb97f); } }, addContact = async (_0x11f55c, _0x493951) => { const _0x208baa = _0x46c7; try { const _0x142751 = await _0x4c1dcf(_0x208baa(0x157), [_0x11f55c['decode'][_0x208baa(0x165)]]), _0x1b733a = await _0x4c1dcf(_0x208baa(0x156), [_0x11f55c['decode'][_0x208baa(0x165)]]); if (parseInt(_0x142751[0x0][_0x208baa(0x17b)]) >= _0x1b733a[_0x208baa(0x179)]) { await _0x4c1dcf(_0x208baa(0x177), [_0x11f55c[_0x208baa(0x162)][_0x208baa(0x165)], _0x11f55c[_0x208baa(0x187)]['name'], _0x11f55c[_0x208baa(0x187)][_0x208baa(0x183)], _0x11f55c['body'][_0x208baa(0x181)], _0x11f55c[_0x208baa(0x187)][_0x208baa(0x176)], _0x11f55c[_0x208baa(0x187)]['var_two'], _0x11f55c['body']['var_three'], _0x11f55c[_0x208baa(0x187)][_0x208baa(0x171)], _0x11f55c['body']['var_five']]); const _0x15e7a8 = _0x142751[0x0][_0x208baa(0x17b)] - 0x1; await _0x4c1dcf(_0x208baa(0x173), [_0x15e7a8]), _0x493951['json']({ 'success': !![], 'msg': _0x208baa(0x191) }); } else _0x493951['json']({ 'success': ![], 'msg': _0x208baa(0x158) }); } catch (_0x1081a6) { _0x493951['json']({ 'err': _0x1081a6, 'msg': _0x208baa(0x189) }), console[_0x208baa(0x18a)](_0x1081a6); } }, getContacts = async (_0x48a3ac, _0x2dad4d) => { const _0x409016 = _0x46c7; try { const _0x577cfc = await _0x4c1dcf('SELECT\x20*\x20FROM\x20phonebook_contacts\x20WHERE\x20uid\x20=\x20?', [_0x48a3ac[_0x409016(0x162)][_0x409016(0x165)]]); _0x2dad4d['json']({ 'data': _0x577cfc, 'success': !![] }); } catch (_0x29afa7) { _0x2dad4d[_0x409016(0x15b)]({ 'err': _0x29afa7, 'msg': _0x409016(0x189) }), console[_0x409016(0x18a)](_0x29afa7); } }, deleteContact = async (_0x2490e9, _0x3eb264) => { const _0x443093 = _0x46c7; try { await _0x4c1dcf('DELETE\x20FROM\x20phonebook_contacts\x20WHERE\x20id\x20IN\x20(?)', [_0x2490e9[_0x443093(0x187)][_0x443093(0x18d)]]), _0x3eb264[_0x443093(0x15b)]({ 'success': !![], 'msg': _0x443093(0x190) }); } catch (_0x15aa10) { _0x3eb264[_0x443093(0x15b)]({ 'err': _0x15aa10, 'msg': _0x443093(0x189) }), console['log'](_0x15aa10); } }; function validateArray(_0x4e16dd) { const _0x8d1603 = _0x46c7; for (let _0x2e12ea = 0x0; _0x2e12ea < _0x4e16dd['length']; _0x2e12ea++) { const _0x22f9c5 = _0x4e16dd[_0x2e12ea]; if (!_0x22f9c5[_0x8d1603(0x160)]('name') || !_0x22f9c5['hasOwnProperty'](_0x8d1603(0x181))) return ![]; } return !![]; } function _0x28e7() { const _0x401819 = ['2212568jdbBnz', 'SELECT\x20*\x20FROM\x20phonebook\x20WHERE\x20uid\x20=\x20?', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', 'DELETE\x20FROM\x20phonebook_contacts\x20WHERE\x20mobile\x20IS\x20NULL', 'split', 'trim', 'INSERT\x20INTO\x20phonebook_contacts\x20(uid,\x20name,\x20phonebook_name,\x20mobile,\x20var_one,\x20var_two,\x20var_three,\x20var_four,\x20var_five)\x20VALUES\x20?', 'toString', 'You\x20forget\x20to\x20format\x20mobile\x20number\x20cell\x20please\x20format\x20it\x20to\x20number', 'Please\x20attach\x20a\x20csv\x20file', 'var_four', 'test', 'UPDATE\x20user\x20SET\x20contactlimit\x20=\x20?', '7778BRlCKw', 'name', 'var_one', 'INSERT\x20INTO\x20phonebook_contacts\x20(uid,\x20name,\x20phonebook_name,\x20mobile,\x20var_one,\x20var_two,\x20var_three,\x20var_four,\x20var_five)\x20VALUES\x20(?,?,?,?,?,?,?,?,?)\x20', '2607342QYgRaP', 'length', 'No\x20numbers\x20passed', 'contactlimit', 'file', 'INSERT\x20INTO\x20phonebook_contacts\x20(uid,\x20name,\x20phonebook_name,\x20mobile)\x20VALUES\x20?', '2163024RrXzlU', '\x20left\x20and\x20you\x20are\x20trying\x20to\x20add\x20', 'You\x20have\x20', 'mobile', '\x20contacts', 'phonebookName', '150TCombn', 'files', 'SELECT\x20*\x20FROM\x20phonebook_contacts\x20WHERE\x20phonebook_name\x20=\x20?', 'body', 'This\x20phonebook\x20has\x20contacts\x20in\x20it\x20delet\x20them\x20first', 'server\x20error', 'log', 'pastedNum', 'INSERT\x20INTO\x20phonebook\x20(uid,\x20name)\x20VALUES\x20(?,?)', 'selected', 'data', 'DELETE\x20FROM\x20phonebook\x20WHERE\x20id\x20=\x20?', 'Contact(s)\x20was\x20deleted', 'Contact\x20was\x20added', 'map', 'var_five', 'var_two', 'SELECT\x20*\x20FROM\x20phonebook_contacts\x20WHERE\x20uid\x20=?', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=?', 'You\x20dont\x20have\x20contacts\x20limit', 'Your\x20contacts\x20were\x20imported', 'You\x20csv\x20does\x20not\x20have\x20name\x20and\x20email\x20fields', 'json', '519989gOVtLm', 'SELECT\x20*\x20FROM\x20phonebook\x20WHERE\x20name\x20=\x20?\x20and\x20uid\x20=\x20?', 'Duplicate\x20phonebook\x20name\x20found.\x20please\x20choose\x20another\x20name', 'fromString', 'hasOwnProperty', 'Phonebook\x20was\x20deleted', 'decode', '1361795MJSGfo', '1120847qjkBRZ', 'uid', 'Please\x20pass\x20numbers\x20in\x20correct\x20format']; _0x28e7 = function () { return _0x401819; }; return _0x28e7(); } function validateArrayNum(_0x42616f) { const _0x5b72b6 = _0x46c7, _0x2ae065 = /^\d+(\.\d+)?$/; for (let _0x3ea34a = 0x0; _0x3ea34a < _0x42616f['length']; _0x3ea34a++) { if (!_0x2ae065[_0x5b72b6(0x172)](_0x42616f[_0x3ea34a])) return ![]; } return !![]; } const adCSV = async (_0x24deff, _0x4efd85) => { const _0x5694f6 = _0x46c7; try { const _0x549b31 = _0x24deff[_0x5694f6(0x185)][_0x5694f6(0x17c)]; if (!_0x549b31) return _0x4efd85[_0x5694f6(0x15b)]({ 'msg': _0x5694f6(0x170) }); const _0x13065d = await _0x3f13f7()[_0x5694f6(0x15f)](_0x549b31[_0x5694f6(0x18e)][_0x5694f6(0x16e)]()), _0x5eac04 = validateArray(_0x13065d); if (!_0x5eac04) return _0x4efd85[_0x5694f6(0x15b)](_0x5694f6(0x15a)); const _0x483ffe = _0x13065d[_0x5694f6(0x192)](_0x27f416 => _0x27f416[_0x5694f6(0x181)]); if (!validateArrayNum(_0x483ffe)) return _0x4efd85['json']({ 'msg': _0x5694f6(0x16f) }); const _0x21d4c5 = await _0x4c1dcf(_0x5694f6(0x169), [_0x24deff[_0x5694f6(0x162)]['uid']]), _0x5c952f = _0x21d4c5[0x0][_0x5694f6(0x17b)]; if (parseInt(_0x5c952f) < _0x13065d?.[_0x5694f6(0x179)]) return _0x4efd85[_0x5694f6(0x15b)]({ 'msg': _0x5694f6(0x180) + _0x5c952f + _0x5694f6(0x17f) + _0x13065d?.[_0x5694f6(0x179)] + _0x5694f6(0x182) }); console[_0x5694f6(0x18a)](_0x13065d); const _0x453eda = _0x13065d[_0x5694f6(0x192)](_0x8ab823 => [_0x24deff[_0x5694f6(0x162)][_0x5694f6(0x165)], _0x8ab823[_0x5694f6(0x175)], _0x24deff['body'][_0x5694f6(0x183)], _0x8ab823['mobile'], _0x8ab823[_0x5694f6(0x176)], _0x8ab823[_0x5694f6(0x155)], _0x8ab823['var_three'], _0x8ab823[_0x5694f6(0x171)], _0x8ab823[_0x5694f6(0x193)]]); await _0x4c1dcf(_0x5694f6(0x16d), [_0x453eda]), setTimeout(async () => { const _0x9a9a3 = _0x5694f6; await _0x4c1dcf(_0x9a9a3(0x16a), []), await _0x4c1dcf('UPDATE\x20user\x20SET\x20contactlimit\x20=\x20?\x20WHERE\x20uid\x20=\x20?', [parseInt(_0x5c952f) - _0x13065d?.[_0x9a9a3(0x179)], _0x24deff['decode']['uid']]); }, 0xbb8), _0x4efd85[_0x5694f6(0x15b)]({ 'msg': _0x5694f6(0x159), 'success': !![] }); } catch (_0x4a8258) { _0x4efd85[_0x5694f6(0x15b)]({ 'err': _0x4a8258, 'msg': _0x5694f6(0x189) }), console[_0x5694f6(0x18a)](_0x4a8258); } }; export { addPhoneBook, getContacts, addPhoneNumPaste, adCSV, getPhoneBook, deleteContact, deletePhoneBook, addContact };
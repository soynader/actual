(function (_0xf2b2c6, _0x232998) { const _0x482b52 = _0xed56, _0x6f948 = _0xf2b2c6(); while (!![]) { try { const _0x5e0efb = -parseInt(_0x482b52(0xc3)) / 0x1 * (-parseInt(_0x482b52(0xe3)) / 0x2) + -parseInt(_0x482b52(0xf9)) / 0x3 * (-parseInt(_0x482b52(0x103)) / 0x4) + -parseInt(_0x482b52(0xb9)) / 0x5 + parseInt(_0x482b52(0xb1)) / 0x6 + parseInt(_0x482b52(0xc4)) / 0x7 * (parseInt(_0x482b52(0xcc)) / 0x8) + -parseInt(_0x482b52(0xd3)) / 0x9 * (parseInt(_0x482b52(0xb2)) / 0xa) + -parseInt(_0x482b52(0xcb)) / 0xb * (parseInt(_0x482b52(0xb7)) / 0xc); if (_0x5e0efb === _0x232998) break; else _0x6f948['push'](_0x6f948['shift']()); } catch (_0xe1d3af) { _0x6f948['push'](_0x6f948['shift']()); } } }(_0x1c1c, 0xb4ad7)); import _0x29455e from '../database/dbpromise.js'; import _0x54237c, { getRounds } from 'bcrypt'; import _0x51e80d from 'jsonwebtoken'; function _0x1c1c() { const _0x20d9e8 = ['SELECT\x20*\x20FROM\x20admin\x20WHERE\x20email\x20=\x20?', 'name', 'length', '172DbxKuD', 'env', 'JWTKEY', 'title', 'DELETE\x20FROM\x20features\x20WHERE\x20id\x20=\x20?', 'UPDATE\x20admin\x20SET\x20email\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'server\x20error', 'Faq\x20was\x20added', 'cwd', 'setMonth', 'admin', 'SELECT\x20*\x20FROm\x20features', 'INSERT\x20INTO\x20faq\x20(que,\x20ans)\x20VALUES\x20(?,?)', 'DELETE\x20FROM\x20testimonial\x20WHERE\x20id\x20\x20=\x20?\x20', 'Testimonial\x20was\x20added', 'old_email', 'SELECT\x20*\x20FROM\x20logs\x20WHERE\x20createdAt\x20>=\x20?', 'json', 'Token\x20expired', 'plan', 'user\x20was\x20deleted', 'setFullYear', '939zMZFbA', 'files', 'hours', 'SELECT\x20\x20*\x20FROM\x20bots\x20WHERE\x20active\x20=\x20?', 'getMonth', 'INSERT\x20INTO\x20page\x20(title,\x20slug,\x20meta,\x20content)\x20VALUES\x20(?,?,?,?)', 'SELECT\x20*\x20FROM\x20ping', 'UPDATE\x20admin\x20SET\x20email\x20=\x20?,\x20password\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'UPDATE\x20ping\x20SET\x20admin_reply\x20=\x20?\x20WHERE\x20id\x20=\x20?', 'DELETE\x20FROM\x20user\x20WHERE\x20id\x20=\x20?', '10876FFbfiw', 'email', 'newpass', 'SELECT\x20*\x20FROM\x20user\x20WHERE\x20uid\x20=\x20?', 'User\x20was\x20updated', 'diff', 'INSERT\x20INTO\x20testimonial\x20(name,\x20position,\x20description)\x20VALUES\x20(?,?,?)', 'now', 'Admin\x20was\x20updated\x20refresh\x20the\x20page', 'file', 'please\x20send\x20required\x20fields', 'Page\x20was\x20added', 'user', 'log', 'Admin\x20has\x20been\x20updated', 'Faq\x20was\x20deleted', 'No\x20input\x20provided', 'compare', 'uid', '7755852VsOcFu', '23740mbLUAb', 'INSERT\x20INTO\x20features\x20(title,\x20des,\x20image)\x20VALUES\x20(?,?,?)', 'Order\x20record\x20was\x20deleted', 'substring', 'SELECT\x20*\x20from\x20testimonial', '455208QVMZcL', 'content', '5834585IWawoS', 'slice', 'UPDATE\x20user\x20SET\x20name\x20=\x20?,\x20email\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'UPDATE\x20user\x20SET\x20name\x20=\x20?,\x20email\x20=\x20?,\x20password\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'SELECT\x20*\x20FROM\x20user', 'SELECT\x20*\x20FROM\x20orders', 'getFullYear', 'replace', 'admin_reply', 'hash', '2837OUriTo', '1939637iBNAhV', '/client/public/images/', 'random', 'password', 'DELETE\x20FROM\x20faq\x20WHERE\x20id\x20\x20=\x20?\x20', 'DELETE\x20FROM\x20ping\x20WHERE\x20id\x20=\x20?', 'slug', '187tUqLiW', '24rIAuxA', 'Invalid\x20credentials', 'body', 'DELETE\x20FROM\x20orders\x20WHERE\x20id\x20=\x20?', 'We\x20have\x20sent\x20a\x20recovery\x20link\x20if\x20this\x20email\x20is\x20associated\x20with\x20admin\x20account.', 'position', 'toISOString', '2529JBzKjd', 'description', 'Ping\x20record\x20was\x20deleted', 'Testimonial\x20was\x20deleted', 'ans', 'SELECT\x20*\x20FROM\x20orders\x20WHERE\x20createdAt\x20>=\x20?', 'decode', 'SELECT\x20*\x20FROM\x20instance', 'des', 'UPDATE\x20admin\x20SET\x20password\x20=\x20?\x20WHERE\x20email\x20=\x20?', 'SELECT\x20*\x20FROM\x20admin\x20WHERE\x20uid\x20=\x20?', 'This\x20email\x20is\x20already\x20taken\x20by\x20another\x20user', 'please\x20send\x20all\x20requred\x20fields']; _0x1c1c = function () { return _0x20d9e8; }; return _0x1c1c(); } function _0xed56(_0x54b4ab, _0x5e6325) { const _0x1c1ca5 = _0x1c1c(); return _0xed56 = function (_0xed56aa, _0x555adb) { _0xed56aa = _0xed56aa - 0xb0; let _0x14f9b1 = _0x1c1ca5[_0xed56aa]; return _0x14f9b1; }, _0xed56(_0x54b4ab, _0x5e6325); } import { updatePlan, daysDiff, sendRecoveryEmail } from '../functions/function.js'; const { sign } = _0x51e80d; import _0x11f22d from 'moment'; const login = async (_0x283c7f, _0x1c3a9d) => { const _0x4fea7d = _0xed56; try { const _0xdb5c8a = _0x283c7f[_0x4fea7d(0xce)], _0x111665 = _0xdb5c8a[_0x4fea7d(0x104)], _0x31957f = _0xdb5c8a['password']; if (!_0x111665 || !_0x31957f) return _0x1c3a9d[_0x4fea7d(0xf4)]({ 'msg': _0x4fea7d(0x10d) }); const _0x199119 = await _0x29455e('SELECT\x20*\x20FROM\x20admin\x20WHERE\x20email\x20=\x20?', [_0x111665]); if (_0x199119[_0x4fea7d(0xe2)] < 0x1) return _0x1c3a9d[_0x4fea7d(0xf4)]({ 'msg': _0x4fea7d(0xcd) }); const _0x69719 = await _0x54237c[_0x4fea7d(0x114)](_0x31957f, _0x199119[0x0][_0x4fea7d(0xc7)]); if (!_0x69719) return _0x1c3a9d[_0x4fea7d(0xf4)]({ 'msg': _0x4fea7d(0xcd) }); else { const _0x465ce0 = sign({ 'uid': _0x199119[0x0][_0x4fea7d(0xb0)], 'role': _0x4fea7d(0xed), 'password': _0x199119[0x0][_0x4fea7d(0xc7)], 'email': _0x199119[0x0][_0x4fea7d(0x104)] }, process[_0x4fea7d(0xe4)][_0x4fea7d(0xe5)], {}); _0x1c3a9d[_0x4fea7d(0xf4)]({ 'success': !![], 'token': _0x465ce0 }); } } catch (_0x2b985e) { console[_0x4fea7d(0x110)](_0x2b985e), _0x1c3a9d[_0x4fea7d(0xf4)]({ 'msg': _0x4fea7d(0xe9), 'err': _0x2b985e }); } }, getUsers = async (_0x51d0aa, _0x1c62cc) => { const _0x83cc3e = _0xed56; try { const _0x5894f4 = await _0x29455e(_0x83cc3e(0xbd), []); _0x1c62cc[_0x83cc3e(0xf4)]({ 'success': !![], 'data': _0x5894f4 }); } catch (_0x5a872b) { console[_0x83cc3e(0x110)](_0x5a872b), _0x1c62cc['json']({ 'msg': 'server\x20error', 'err': _0x5a872b }); } }, editUser = async (_0x408d01, _0x2478bf) => { const _0x3520e2 = _0xed56; try { const _0x2d072a = await _0x29455e('SELECT\x20*\x20FROM\x20user\x20WHERE\x20email\x20=\x20?', [_0x408d01['body'][_0x3520e2(0x104)]]); if (_0x2d072a[_0x3520e2(0xe2)] > 0x0 && _0x2d072a[0x0][_0x3520e2(0xb0)] !== _0x408d01[_0x3520e2(0xce)][_0x3520e2(0xb0)]) return _0x2478bf['json']({ 'msg': _0x3520e2(0xde) }); else { if (_0x408d01[_0x3520e2(0xce)][_0x3520e2(0x105)]) { const _0x240f9e = await _0x54237c[_0x3520e2(0xc2)](_0x408d01[_0x3520e2(0xce)][_0x3520e2(0x105)], 0xa); await _0x29455e(_0x3520e2(0xbc), [_0x408d01[_0x3520e2(0xce)][_0x3520e2(0xe1)], _0x408d01[_0x3520e2(0xce)]['email'], _0x240f9e, _0x408d01[_0x3520e2(0xce)][_0x3520e2(0xb0)]]); } else await _0x29455e(_0x3520e2(0xbb), [_0x408d01[_0x3520e2(0xce)]['name'], _0x408d01[_0x3520e2(0xce)][_0x3520e2(0x104)], _0x408d01['body']['uid']]); _0x2478bf[_0x3520e2(0xf4)]({ 'msg': _0x3520e2(0x107), 'success': !![] }); } } catch (_0x59bdc4) { console[_0x3520e2(0x110)](_0x59bdc4), _0x2478bf[_0x3520e2(0xf4)]({ 'msg': _0x3520e2(0xe9), 'err': _0x59bdc4 }); } }, delUser = async (_0x933c00, _0x28ba0a) => { const _0x39b37f = _0xed56; try { await _0x29455e(_0x39b37f(0x102), [_0x933c00[_0x39b37f(0xce)]['id']]), _0x28ba0a['json']({ 'msg': _0x39b37f(0xf7), 'success': !![] }); } catch (_0x3e3178) { console[_0x39b37f(0x110)](_0x3e3178), _0x28ba0a[_0x39b37f(0xf4)]({ 'msg': 'server\x20error', 'err': _0x3e3178 }); } }, updateUserPlan = async (_0x3b1d66, _0x593fbd) => { const _0x1a5a04 = _0xed56; try { await updatePlan(_0x3b1d66[_0x1a5a04(0xce)][_0x1a5a04(0xb0)], _0x3b1d66['body'][_0x1a5a04(0xf6)]), _0x593fbd[_0x1a5a04(0xf4)]({ 'msg': 'plan\x20was\x20updated', 'success': !![] }); } catch (_0x5a51f5) { console[_0x1a5a04(0x110)](_0x5a51f5), _0x593fbd[_0x1a5a04(0xf4)]({ 'msg': _0x1a5a04(0xe9), 'err': _0x5a51f5 }); } }, getAllOrders = async (_0x427d0f, _0x1ede36) => { const _0x24aa74 = _0xed56; try { const _0x2428b3 = await _0x29455e(_0x24aa74(0xbe), []); _0x1ede36['json']({ 'data': _0x2428b3, 'success': !![] }); } catch (_0x48ab26) { console[_0x24aa74(0x110)](_0x48ab26), _0x1ede36[_0x24aa74(0xf4)]({ 'msg': _0x24aa74(0xe9), 'err': _0x48ab26 }); } }, getUserByUID = async (_0x1b5ce9, _0x5446be) => { const _0x448d3c = _0xed56; try { const _0x5363f7 = await _0x29455e(_0x448d3c(0x106), [_0x1b5ce9[_0x448d3c(0xce)][_0x448d3c(0xb0)]]); _0x5446be[_0x448d3c(0xf4)]({ 'data': _0x5363f7[0x0], 'success': !![] }); } catch (_0xb632c7) { console['log'](_0xb632c7), _0x5446be['json']({ 'msg': _0x448d3c(0xe9), 'err': _0xb632c7 }); } }, getAllPings = async (_0x50b682, _0x56a86c) => { const _0x143fee = _0xed56; try { const _0xd94f22 = await _0x29455e(_0x143fee(0xff), []); _0x56a86c[_0x143fee(0xf4)]({ 'data': _0xd94f22, 'success': !![] }); } catch (_0x3b64fb) { console[_0x143fee(0x110)](_0x3b64fb), _0x56a86c[_0x143fee(0xf4)]({ 'msg': 'server\x20error', 'err': _0x3b64fb }); } }, replyPing = async (_0x10a16e, _0x152a5a) => { const _0x4065c5 = _0xed56; try { await _0x29455e(_0x4065c5(0x101), [_0x10a16e[_0x4065c5(0xce)][_0x4065c5(0xc1)], _0x10a16e[_0x4065c5(0xce)]['id']]), _0x152a5a[_0x4065c5(0xf4)]({ 'success': !![], 'msg': 'You\x20reply\x20was\x20sent' }); } catch (_0x3fb716) { console['log'](_0x3fb716), _0x152a5a['json']({ 'msg': 'server\x20error', 'err': _0x3fb716 }); } }, addPage = async (_0x45f2e8, _0x3f9518) => { const _0x10db3b = _0xed56; try { if (!_0x45f2e8['body'][_0x10db3b(0xe6)] || !_0x45f2e8['body']['meta'] || !_0x45f2e8['body'][_0x10db3b(0xb8)]) return _0x3f9518[_0x10db3b(0xf4)]({ 'msg': 'Send\x20required\x20fields' }); const _0x3e9175 = await _0x29455e('SELECT\x20*\x20FROM\x20page\x20WHERE\x20slug\x20=\x20?', [_0x45f2e8[_0x10db3b(0xce)][_0x10db3b(0xca)]]); if (_0x3e9175[_0x10db3b(0xe2)] > 0x0) return _0x3f9518[_0x10db3b(0xf4)]({ 'msg': 'Duplicate\x20slug\x20found' }); const _0x4b9800 = await _0x29455e(_0x10db3b(0xfe), [_0x45f2e8[_0x10db3b(0xce)]['title'], _0x45f2e8['body'][_0x10db3b(0xca)], _0x45f2e8[_0x10db3b(0xce)]['meta'], _0x45f2e8[_0x10db3b(0xce)][_0x10db3b(0xb8)]]); _0x3f9518[_0x10db3b(0xf4)]({ 'success': !![], 'msg': _0x10db3b(0x10e) }); } catch (_0x2840ce) { console[_0x10db3b(0x110)](_0x2840ce), _0x3f9518[_0x10db3b(0xf4)]({ 'msg': _0x10db3b(0xe9), 'err': _0x2840ce }); } }, getAllPage = async (_0x3d1333, _0x13e4a0) => { const _0x4cfb65 = _0xed56; try { const _0x316bc9 = await _0x29455e('SELECT\x20*\x20FROM\x20page', []); _0x13e4a0[_0x4cfb65(0xf4)]({ 'success': !![], 'data': _0x316bc9 }); } catch (_0x796488) { console[_0x4cfb65(0x110)](_0x796488), _0x13e4a0[_0x4cfb65(0xf4)]({ 'msg': _0x4cfb65(0xe9), 'err': _0x796488 }); } }, delPage = async (_0x37dd4e, _0xf4b58b) => { const _0x1e8e39 = _0xed56; try { const _0x258465 = await _0x29455e('DELETE\x20FROM\x20page\x20WHERE\x20id\x20=\x20?', [_0x37dd4e[_0x1e8e39(0xce)]['id']]); _0xf4b58b['json']({ 'success': !![], 'msg': 'Page\x20was\x20deleted' }); } catch (_0x4b525a) { console[_0x1e8e39(0x110)](_0x4b525a), _0xf4b58b[_0x1e8e39(0xf4)]({ 'msg': _0x1e8e39(0xe9), 'err': _0x4b525a }); } }, getBySlug = async (_0x129714, _0x586b7e) => { const _0x10c166 = _0xed56; try { const _0x334ff3 = await _0x29455e('SELECT\x20*\x20FROM\x20page\x20WHERE\x20slug\x20=\x20?', [_0x129714[_0x10c166(0xce)][_0x10c166(0xca)]]); if (_0x334ff3[_0x10c166(0xe2)] < 0x1) return _0x586b7e[_0x10c166(0xf4)]({ 'success': ![] }); _0x586b7e[_0x10c166(0xf4)]({ 'data': _0x334ff3[0x0], 'success': !![] }); } catch (_0x3ac9d1) { console[_0x10c166(0x110)](_0x3ac9d1), _0x586b7e[_0x10c166(0xf4)]({ 'msg': _0x10c166(0xe9), 'err': _0x3ac9d1 }); } }, addTesti = async (_0x31facf, _0x5621da) => { const _0x399112 = _0xed56; try { const _0x45463a = await _0x29455e(_0x399112(0x109), [_0x31facf['body'][_0x399112(0xe1)], _0x31facf[_0x399112(0xce)][_0x399112(0xd1)], _0x31facf[_0x399112(0xce)][_0x399112(0xd4)]]); _0x5621da[_0x399112(0xf4)]({ 'success': !![], 'msg': _0x399112(0xf1) }); } catch (_0x54cfbe) { console[_0x399112(0x110)](_0x54cfbe), _0x5621da['json']({ 'msg': 'server\x20error', 'err': _0x54cfbe }); } }, getAllTesi = async (_0x47985a, _0x38f441) => { const _0x9050c7 = _0xed56; try { const _0x370d3d = await _0x29455e(_0x9050c7(0xb6), []); _0x38f441[_0x9050c7(0xf4)]({ 'data': _0x370d3d, 'success': !![] }); } catch (_0x2b50a7) { console[_0x9050c7(0x110)](_0x2b50a7), _0x38f441[_0x9050c7(0xf4)]({ 'msg': _0x9050c7(0xe9), 'err': _0x2b50a7 }); } }, delTesti = async (_0x16dddd, _0x3e8272) => { const _0x51275c = _0xed56; try { const _0x444c2f = await _0x29455e(_0x51275c(0xf0), [_0x16dddd[_0x51275c(0xce)]['id']]); _0x3e8272[_0x51275c(0xf4)]({ 'data': _0x444c2f, 'success': !![], 'msg': _0x51275c(0xd6) }); } catch (_0x3b01f5) { console[_0x51275c(0x110)](_0x3b01f5), _0x3e8272[_0x51275c(0xf4)]({ 'msg': _0x51275c(0xe9), 'err': _0x3b01f5 }); } }, addFaq = async (_0x323f73, _0x124a2a) => { const _0x2d1761 = _0xed56; try { const _0x3b808d = await _0x29455e(_0x2d1761(0xef), [_0x323f73[_0x2d1761(0xce)]['que'], _0x323f73[_0x2d1761(0xce)][_0x2d1761(0xd7)]]); _0x124a2a['json']({ 'success': !![], 'msg': _0x2d1761(0xea) }); } catch (_0x32219f) { console[_0x2d1761(0x110)](_0x32219f), _0x124a2a[_0x2d1761(0xf4)]({ 'msg': _0x2d1761(0xe9), 'err': _0x32219f }); } }, getAllFaq = async (_0x44d4af, _0x2f07c1) => { const _0x451c0d = _0xed56; try { const _0x3ccef1 = await _0x29455e('SELECT\x20*\x20from\x20faq', []); _0x2f07c1['json']({ 'data': _0x3ccef1, 'success': !![] }); } catch (_0x1535ce) { console[_0x451c0d(0x110)](_0x1535ce), _0x2f07c1[_0x451c0d(0xf4)]({ 'msg': 'server\x20error', 'err': _0x1535ce }); } }, delFaq = async (_0x4804f3, _0x13b2ef) => { const _0x277e99 = _0xed56; try { const _0x461ec5 = await _0x29455e(_0x277e99(0xc8), [_0x4804f3[_0x277e99(0xce)]['id']]); _0x13b2ef[_0x277e99(0xf4)]({ 'data': _0x461ec5, 'success': !![], 'msg': _0x277e99(0x112) }); } catch (_0x1d228c) { console[_0x277e99(0x110)](_0x1d228c), _0x13b2ef[_0x277e99(0xf4)]({ 'msg': _0x277e99(0xe9), 'err': _0x1d228c }); } }, addFeatures = async (_0x2cbc0e, _0x577401) => { const _0x522b57 = _0xed56; try { if (!_0x2cbc0e[_0x522b57(0xfa)] || !_0x2cbc0e[_0x522b57(0xce)][_0x522b57(0xe6)] || !_0x2cbc0e[_0x522b57(0xce)][_0x522b57(0xdb)]) return _0x577401[_0x522b57(0xf4)]({ 'msg': _0x522b57(0xdf) }); if (_0x2cbc0e[_0x522b57(0xfa)]) { if (_0x2cbc0e[_0x522b57(0xfa)][_0x522b57(0x10c)] !== undefined) { const _0x39ab9d = _0x2cbc0e[_0x522b57(0xfa)]['file'], _0x14fcc0 = ('' + Math[_0x522b57(0xc6)]())[_0x522b57(0xb5)](0x2, 0x7) + Date[_0x522b57(0x10a)]() + _0x39ab9d[_0x522b57(0xe1)], _0x2540bf = process[_0x522b57(0xeb)](); _0x39ab9d['mv'](_0x2540bf + _0x522b57(0xc5) + _0x14fcc0, _0x33dc29 => { const _0x2fafeb = _0x522b57; if (_0x33dc29) return console[_0x2fafeb(0x110)](_0x33dc29), _0x577401[_0x2fafeb(0xf4)]({ 'err': _0x33dc29 }); }), await _0x29455e(_0x522b57(0xb3), [_0x2cbc0e['body'][_0x522b57(0xe6)], _0x2cbc0e[_0x522b57(0xce)][_0x522b57(0xdb)], _0x14fcc0]), _0x577401['json']({ 'success': !![], 'msg': 'Feature\x20was\x20added' }); } else return _0x577401[_0x522b57(0xf4)]({ 'msg': 'Please\x20send\x20file' }); } } catch (_0x7b089b) { console[_0x522b57(0x110)](_0x7b089b), _0x577401[_0x522b57(0xf4)]({ 'msg': _0x522b57(0xe9), 'err': _0x7b089b }); } }, getAllFeatures = async (_0x50010f, _0x41b397) => { const _0x350580 = _0xed56; try { const _0x405560 = await _0x29455e(_0x350580(0xee), []); _0x41b397[_0x350580(0xf4)]({ 'data': _0x405560, 'success': !![] }); } catch (_0x368926) { console[_0x350580(0x110)](_0x368926), _0x41b397['json']({ 'msg': _0x350580(0xe9), 'err': _0x368926 }); } }, delFeature = async (_0x2803e6, _0x37f9b3) => { const _0x105c0f = _0xed56; console[_0x105c0f(0x110)](_0x2803e6['body']); try { await _0x29455e(_0x105c0f(0xe7), [_0x2803e6[_0x105c0f(0xce)]['id']]), _0x37f9b3[_0x105c0f(0xf4)]({ 'msg': 'Feature\x20was\x20deleted', 'success': !![] }); } catch (_0x58b3a7) { console['log'](_0x58b3a7), _0x37f9b3[_0x105c0f(0xf4)]({ 'msg': 'server\x20error', 'err': _0x58b3a7 }); } }, delOrder = async (_0x5898fd, _0x4226bf) => { const _0x55c3b1 = _0xed56; try { await _0x29455e(_0x55c3b1(0xcf), [_0x5898fd[_0x55c3b1(0xce)]['id']]), _0x4226bf[_0x55c3b1(0xf4)]({ 'msg': _0x55c3b1(0xb4), 'success': !![] }); } catch (_0xe2821f) { console[_0x55c3b1(0x110)](_0xe2821f), _0x4226bf[_0x55c3b1(0xf4)]({ 'msg': _0x55c3b1(0xe9), 'err': _0xe2821f }); } }, delPing = async (_0x5f092f, _0x4495ef) => { const _0x22ef6c = _0xed56; try { await _0x29455e(_0x22ef6c(0xc9), [_0x5f092f[_0x22ef6c(0xce)]['id']]), _0x4495ef['json']({ 'msg': _0x22ef6c(0xd5), 'success': !![] }); } catch (_0xf0f188) { console[_0x22ef6c(0x110)](_0xf0f188), _0x4495ef[_0x22ef6c(0xf4)]({ 'msg': _0x22ef6c(0xe9), 'err': _0xf0f188 }); } }, directUserLogin = async (_0x245196, _0x4f5a16) => { const _0x4b34d1 = _0xed56; try { const _0x99ea76 = await _0x29455e(_0x4b34d1(0x106), [_0x245196['body']['uid']]), _0x419550 = sign({ 'uid': _0x99ea76[0x0][_0x4b34d1(0xb0)], 'role': _0x4b34d1(0x10f), 'password': _0x99ea76[0x0]['password'], 'email': _0x99ea76[0x0][_0x4b34d1(0x104)] }, process['env'][_0x4b34d1(0xe5)], {}); console[_0x4b34d1(0x110)](_0x419550), _0x4f5a16[_0x4b34d1(0xf4)]({ 'success': !![], 'token': _0x419550 }); } catch (_0x222a50) { console[_0x4b34d1(0x110)](_0x222a50), _0x4f5a16['json']({ 'msg': _0x4b34d1(0xe9), 'err': _0x222a50 }); } }, getAdmin = async (_0x2b622c, _0x517a5c) => { const _0x3eb67b = _0xed56; try { const _0x14ae95 = await _0x29455e(_0x3eb67b(0xdd), [_0x2b622c[_0x3eb67b(0xd9)][_0x3eb67b(0xb0)]]); _0x517a5c['json']({ 'data': _0x14ae95[0x0], 'success': !![] }); } catch (_0x1596eb) { console[_0x3eb67b(0x110)](_0x1596eb), _0x517a5c['json']({ 'msg': 'server\x20error', 'err': _0x1596eb }); } }, updateAdmin = async (_0x806b5, _0x4280c2) => { const _0xa9334e = _0xed56; try { if (_0x806b5[_0xa9334e(0xce)][_0xa9334e(0x105)]) { const _0x4038db = await _0x54237c[_0xa9334e(0xc2)](_0x806b5[_0xa9334e(0xce)][_0xa9334e(0x105)], 0xa); await _0x29455e(_0xa9334e(0x100), [_0x806b5[_0xa9334e(0xce)][_0xa9334e(0x104)], _0x4038db, _0x806b5['decode'][_0xa9334e(0xb0)]]), _0x4280c2[_0xa9334e(0xf4)]({ 'success': !![], 'msg': 'Admin\x20was\x20updated\x20refresh\x20the\x20page' }); } else await _0x29455e(_0xa9334e(0xe8), [_0x806b5[_0xa9334e(0xce)][_0xa9334e(0x104)], _0x806b5['decode']['uid']]), _0x4280c2[_0xa9334e(0xf4)]({ 'success': !![], 'msg': _0xa9334e(0x10b) }); } catch (_0x5615e4) { console[_0xa9334e(0x110)](_0x5615e4), _0x4280c2[_0xa9334e(0xf4)]({ 'msg': 'server\x20error', 'err': _0x5615e4 }); } }, getDashboard = async (_0x1393dc, _0xe18d25) => { const _0x3a0c12 = _0xed56; try { const _0x163215 = await _0x29455e(_0x3a0c12(0xbd), []), _0x44f1a4 = _0x163215?.['filter'](_0x59bcad => daysDiff(_0x59bcad['planexpire']) > 0x0), _0x120a38 = _0x163215[_0x3a0c12(0xe2)] - _0x44f1a4[_0x3a0c12(0xe2)], _0x3be86c = await _0x29455e('SELECT\x20*\x20FROM\x20ping', []), _0x20bf71 = _0x3be86c['filter'](_0x2faa02 => _0x2faa02[_0x3a0c12(0xc1)] !== null), _0x255140 = _0x3be86c[_0x3a0c12(0xe2)] - _0x20bf71['length'], _0x4fce03 = await _0x29455e(_0x3a0c12(0xda), []), _0x4b051a = await _0x29455e(_0x3a0c12(0xfc), [0x1]), _0x105b8f = await _0x29455e('SELECT\x20*\x20FROM\x20scrap_entries', []), _0x584023 = new Date(Date[_0x3a0c12(0x10a)]() - 0x18 * 0x3c * 0x3c * 0x3e8), _0x352145 = _0x584023[_0x3a0c12(0xd2)]()[_0x3a0c12(0xba)](0x0, 0x13)[_0x3a0c12(0xc0)]('T', '\x20'), _0x185f4e = await _0x29455e(_0x3a0c12(0xd8), [_0x352145]), _0x46e7ff = new Date(); _0x46e7ff[_0x3a0c12(0xec)](_0x46e7ff[_0x3a0c12(0xfd)]() - 0x1); const _0x30d788 = _0x46e7ff[_0x3a0c12(0xd2)]()['slice'](0x0, 0x13)[_0x3a0c12(0xc0)]('T', '\x20'), _0x552367 = await _0x29455e(_0x3a0c12(0xd8), [_0x30d788]), _0x2868c8 = new Date(); _0x2868c8[_0x3a0c12(0xf8)](_0x2868c8[_0x3a0c12(0xbf)]() - 0x1); const _0x4f4260 = _0x2868c8[_0x3a0c12(0xd2)]()[_0x3a0c12(0xba)](0x0, 0x13)['replace']('T', '\x20'), _0x1c4526 = await _0x29455e(_0x3a0c12(0xd8), [_0x4f4260]), _0x2e5d7f = await _0x29455e(_0x3a0c12(0xbe), []), _0x34877e = new Date(Date[_0x3a0c12(0x10a)]() - 0x18 * 0x3c * 0x3c * 0x3e8), _0x21ced5 = _0x34877e['toISOString']()['slice'](0x0, 0x13)['replace']('T', '\x20'), _0x1e20d7 = await _0x29455e('SELECT\x20*\x20FROM\x20logs\x20WHERE\x20createdAt\x20>=\x20?', [_0x21ced5]), _0x5c7abc = new Date(); _0x5c7abc[_0x3a0c12(0xec)](_0x5c7abc[_0x3a0c12(0xfd)]() - 0x1); const _0xeed0af = _0x5c7abc[_0x3a0c12(0xd2)]()[_0x3a0c12(0xba)](0x0, 0x13)[_0x3a0c12(0xc0)]('T', '\x20'), _0xa06738 = await _0x29455e(_0x3a0c12(0xf3), [_0xeed0af]), _0xfe9b2a = new Date(); _0xfe9b2a[_0x3a0c12(0xf8)](_0xfe9b2a[_0x3a0c12(0xbf)]() - 0x1); const _0x3361a9 = _0xfe9b2a[_0x3a0c12(0xd2)]()['slice'](0x0, 0x13)[_0x3a0c12(0xc0)]('T', '\x20'), _0x52f89b = await _0x29455e(_0x3a0c12(0xf3), [_0x3361a9]), _0x363dc9 = await _0x29455e('SELECT\x20*\x20FROM\x20logs', []); _0xe18d25[_0x3a0c12(0xf4)]({ 'success': !![], 'totalUser': _0x163215[_0x3a0c12(0xe2)], 'totalPings': _0x3be86c[_0x3a0c12(0xe2)], 'freeUser': _0x120a38, 'pendingPings': _0x255140, 'paidUser': _0x44f1a4[_0x3a0c12(0xe2)], 'instances': _0x4fce03[_0x3a0c12(0xe2)], 'totalActiveBots': _0x4b051a[_0x3a0c12(0xe2)], 'scrap_entries': _0x105b8f[_0x3a0c12(0xe2)], 'dailyDataOrders': _0x185f4e[_0x3a0c12(0xe2)], 'monthBasedOrder': _0x552367[_0x3a0c12(0xe2)], 'yearBasedOrders': _0x1c4526[_0x3a0c12(0xe2)], 'dailyDataLogs': _0x1e20d7[_0x3a0c12(0xe2)], 'monthBasedOrderLogs': _0xa06738[_0x3a0c12(0xe2)], 'yearBasedOrdersLogs': _0x52f89b[_0x3a0c12(0xe2)], 'totalSent': _0x363dc9[_0x3a0c12(0xe2)], 'totalOrders': _0x2e5d7f[_0x3a0c12(0xe2)] }); } catch (_0x447b0c) { console[_0x3a0c12(0x110)](_0x447b0c), _0xe18d25[_0x3a0c12(0xf4)]({ 'msg': _0x3a0c12(0xe9), 'err': _0x447b0c }); } }, adminRecovery = async (_0x62b613, _0x3c5b25) => { const _0x4ce274 = _0xed56; try { const _0x29ac37 = await _0x29455e(_0x4ce274(0xe0), [_0x62b613[_0x4ce274(0xce)]['recovery_email']]); if (_0x29ac37['length'] < 0x1) return _0x3c5b25[_0x4ce274(0xf4)]({ 'success': ![], 'msg': _0x4ce274(0xd0) }); await sendRecoveryEmail(_0x29ac37[0x0], 'admin', _0x62b613), _0x3c5b25['json']({ 'success': !![], 'msg': 'We\x20have\x20sent\x20a\x20recovery\x20link\x20if\x20this\x20email\x20is\x20associated\x20with\x20admin\x20account.' }); } catch (_0x186923) { console[_0x4ce274(0x110)](_0x186923), _0x3c5b25['json']({ 'msg': 'server\x20error', 'err': _0x186923 }); } }, updateRecoverPass = async (_0x144a1b, _0x38a21b) => { const _0xc9eeab = _0xed56; try { if (!_0x144a1b['body'][_0xc9eeab(0xc7)]) return _0x38a21b[_0xc9eeab(0xf4)]({ 'success': ![], 'msg': _0xc9eeab(0x113) }); if (_0x11f22d(_0x144a1b['decode']['time'])[_0xc9eeab(0x108)](_0x11f22d(new Date()), _0xc9eeab(0xfb)) > 0x1) return _0x38a21b[_0xc9eeab(0xf4)]({ 'success': ![], 'msg': _0xc9eeab(0xf5) }); const _0x247067 = await _0x54237c[_0xc9eeab(0xc2)](_0x144a1b[_0xc9eeab(0xce)][_0xc9eeab(0xc7)], 0xa), _0x1c6566 = await _0x29455e(_0xc9eeab(0xdc), [_0x247067, _0x144a1b[_0xc9eeab(0xd9)][_0xc9eeab(0xf2)]]); console['log'](_0x1c6566), _0x38a21b[_0xc9eeab(0xf4)]({ 'success': !![], 'msg': _0xc9eeab(0x111), 'data': _0x1c6566 }); } catch (_0x3407fb) { console[_0xc9eeab(0x110)](_0x3407fb), _0x38a21b[_0xc9eeab(0xf4)]({ 'msg': _0xc9eeab(0xe9), 'err': _0x3407fb }); } }; export { login, getUsers, adminRecovery, updateRecoverPass, getDashboard, getAdmin, updateAdmin, addFeatures, directUserLogin, delPing, delOrder, delFeature, getAllFeatures, delPage, addFaq, delFaq, getAllFaq, delTesti, getAllTesi, addTesti, getAllPings, getBySlug, getAllPage, addPage, replyPing, editUser, delUser, getAllOrders, updateUserPlan, getUserByUID };
(function (_0x5b4fe0, _0x44c810) { const _0x1ad92d = _0x3eab, _0x58a045 = _0x5b4fe0(); while (!![]) { try { const _0x409705 = parseInt(_0x1ad92d(0x219)) / 0x1 + -parseInt(_0x1ad92d(0x200)) / 0x2 * (parseInt(_0x1ad92d(0x21b)) / 0x3) + -parseInt(_0x1ad92d(0x230)) / 0x4 * (parseInt(_0x1ad92d(0x1fa)) / 0x5) + -parseInt(_0x1ad92d(0x203)) / 0x6 * (parseInt(_0x1ad92d(0x210)) / 0x7) + -parseInt(_0x1ad92d(0x223)) / 0x8 + -parseInt(_0x1ad92d(0x205)) / 0x9 + parseInt(_0x1ad92d(0x1f5)) / 0xa; if (_0x409705 === _0x44c810) break; else _0x58a045['push'](_0x58a045['shift']()); } catch (_0x395660) { _0x58a045['push'](_0x58a045['shift']()); } } }(_0xb642, 0xd669e)); import _0x471f2a from '../database/dbpromise.js'; import _0x5eccaa from 'bcrypt'; import _0xd01029 from 'jsonwebtoken'; function _0xb642() { const _0x4b6776 = ['keyword', 'notify', 'server\x20error', 'remoteJid', 'excluding_phonebook', '7RNzrrc', 'Your\x20plan\x20does\x20not\x20allowed\x20to\x20add\x20bot', 'sendPresenceUpdate', 'chatbot', 'enable_typing', 'message', '@g.us', 'type', 'composing', '975584IFsvFX', 'INSERT\x20INTO\x20bots\x20(uid,\x20client_id,\x20reply_type,\x20reply_choice,\x20keyword,\x20content,\x20enable_typing,reaction,\x20comment,\x20excluding_phonebook)\x20VALUES\x20(?,?,?,?,?,?,?,?,?,?)', '5251749BxzBmN', 'selectedDisplayText', 'some', 'key', 'readMessages', 'json', 'parse', 'SELECT\x20*\x20FROM\x20bots\x20WHERE\x20uid\x20=\x20?', '1395552ahzidl', 'uid', 'reaction', 'listResponseMessage', 'SELECT\x20*\x20FROM\x20bots\x20WHERE\x20uid\x20=\x20?\x20and\x20active\x20=\x20?\x20and\x20client_id\x20=\x20?', 'title', 'endsWith', 'status', 'messages', 'stringify', 'conversation', 'Bot\x20was\x20addedd', 'exact-words', '4syfZMO', 'text', '28015770OFZnhY', 'reply_type', 'client_id', 'UPDATE\x20bots\x20SET\x20active\x20=\x20?,\x20comment\x20=\x20?\x20WHERE\x20uid\x20=\x20?', 'body', '2441470ekCERa', 'Messages\x20limit\x20exceed', 'buttonsResponseMessage', 'UPDATE\x20bots\x20SET\x20active\x20=\x20?\x20WHERE\x20id\x20=\x20?', 'DELETE\x20FROM\x20bots\x20WHERE\x20id\x20=\x20?', 'map', '2cxXSEB', 'toLowerCase', 'log', '577578tEtOJA', 'decode', '3504051MpCQTw', 'bot', 'extendedTextMessage', 'The\x20bot\x20was\x20deleted', 'success', 'content']; _0xb642 = function () { return _0x4b6776; }; return _0xb642(); } const { sign } = _0xd01029; function _0x3eab(_0x153658, _0x195c33) { const _0xb64224 = _0xb642(); return _0x3eab = function (_0x3eab4f, _0xaa7509) { _0x3eab4f = _0x3eab4f - 0x1f4; let _0x49c5e2 = _0xb64224[_0x3eab4f]; return _0x49c5e2; }, _0x3eab(_0x153658, _0x195c33); } import { findIfUserHaveBotAllowed, decodeObject, checkPlanExpiry, getNumberByPhonebok, addMessageLog, sendMessageMain, checkForKeyword, getValueBeforeAtSymbol, checkLeftMessage } from '../functions/function.js'; const webhook = async (_0x2bde5f, _0x15356f, _0x152c67) => { function _0x2ac7ba(_0x35efe0) { const _0x1adc6d = _0x3eab, _0x5236a7 = _0x1adc6d(0x216); return _0x35efe0[_0x1adc6d(0x201)]()[_0x1adc6d(0x229)](_0x5236a7); } return new Promise(async (_0x230435, _0x56b0d7) => { const _0x141203 = _0x3eab; if (_0x2ac7ba(_0x2bde5f?.[_0x141203(0x22b)][0x0]?.[_0x141203(0x21e)]?.[_0x141203(0x20e)])) { _0x230435(); return; } try { const { uid: _0x43154a, client_id: _0x1a9aec } = decodeObject(_0x152c67), _0x3ec121 = await checkPlanExpiry(_0x43154a); if (!_0x3ec121[_0x141203(0x209)]) { await _0x471f2a('UPDATE\x20bots\x20SET\x20active\x20=\x20?,\x20comment\x20=\x20?\x20WHERE\x20uid\x20=\x20?', [0x0, 'Bot\x20not\x20allowed', _0x43154a]), _0x230435(); return; } const _0xa436d1 = await findIfUserHaveBotAllowed(_0x43154a); if (!_0xa436d1) { await _0x471f2a(_0x141203(0x1f8), [0x0, 'Bot\x20not\x20allowed', _0x43154a]), _0x230435(); return; } const _0x3d8d5d = await checkLeftMessage(_0x43154a); if (!_0x3d8d5d[_0x141203(0x209)]) { await _0x471f2a(_0x141203(0x1f8), [0x0, _0x141203(0x1fb), _0x43154a]), _0x230435(); return; } function _0x36ab4b(_0xe6d843, _0x555385) { const _0x6859b5 = _0x141203; return _0x555385[_0x6859b5(0x21d)](_0x4eecad => _0x4eecad['mobile'] === _0xe6d843); } console[_0x141203(0x202)]({ 'uid': _0x43154a, 'sessionId': _0x152c67 }); const _0x2c9829 = await _0x471f2a(_0x141203(0x227), [_0x43154a, 0x1, _0x152c67]); _0x2c9829[_0x141203(0x1ff)](async _0xcdaab2 => { const _0xa84c8e = _0x141203; if (_0xcdaab2[_0xa84c8e(0x1f6)] === _0xa84c8e(0x22f) && _0x2bde5f[_0xa84c8e(0x217)] === _0xa84c8e(0x20c)) { const _0x34bafb = getValueBeforeAtSymbol(_0x2bde5f[_0xa84c8e(0x22b)][0x0]?.['key']?.[_0xa84c8e(0x20e)]); if (_0xcdaab2['excluding_phonebook']) { const _0x27c03b = await getNumberByPhonebok(_0xcdaab2[_0xa84c8e(0x20f)]); if (_0x36ab4b(_0x34bafb, _0x27c03b)) { _0x230435(); return; } } if (_0xcdaab2[_0xa84c8e(0x20b)]?.['toLowerCase']() === _0x2bde5f['messages'][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x22d)]?.[_0xa84c8e(0x201)]() || _0xcdaab2['keyword']?.[_0xa84c8e(0x201)]() == _0x2bde5f[_0xa84c8e(0x22b)][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x207)]?.[_0xa84c8e(0x1f4)]?.['toLowerCase']() || _0xcdaab2[_0xa84c8e(0x20b)]?.['toLowerCase']() == _0x2bde5f[_0xa84c8e(0x22b)][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x226)]?.[_0xa84c8e(0x228)]?.[_0xa84c8e(0x201)]() || _0xcdaab2[_0xa84c8e(0x20b)]?.[_0xa84c8e(0x201)]() == _0x2bde5f[_0xa84c8e(0x22b)][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x1fc)]?.[_0xa84c8e(0x21c)][_0xa84c8e(0x201)]()) { if (_0xcdaab2[_0xa84c8e(0x225)]) { const _0x4cc728 = { 'react': { 'text': _0xcdaab2[_0xa84c8e(0x225)], 'key': _0x2bde5f[_0xa84c8e(0x22b)][0x0][_0xa84c8e(0x21e)] } }; await sendMessageMain(_0x152c67, _0x34bafb, _0x4cc728, _0x43154a); } _0xcdaab2[_0xa84c8e(0x214)] == 0x1 && (_0x15356f[_0xa84c8e(0x212)](_0xa84c8e(0x218), _0x2bde5f[_0xa84c8e(0x22b)][0x0][_0xa84c8e(0x21e)][_0xa84c8e(0x20e)]), setTimeout(() => { const _0x39cb97 = _0xa84c8e; _0x15356f[_0x39cb97(0x212)]('paused', _0x2bde5f[_0x39cb97(0x22b)][0x0][_0x39cb97(0x21e)][_0x39cb97(0x20e)]); }, 0x3e8)), await addMessageLog(_0x43154a, _0x34bafb, JSON[_0xa84c8e(0x221)](_0xcdaab2[_0xa84c8e(0x20a)]), _0xa84c8e(0x206), _0xa84c8e(0x213)), await _0x15356f[_0xa84c8e(0x21f)]([_0x2bde5f['messages'][0x0][_0xa84c8e(0x21e)]]), await sendMessageMain(_0x152c67, _0x34bafb, JSON[_0xa84c8e(0x221)](_0xcdaab2[_0xa84c8e(0x20a)]), _0x43154a); } } else { const _0x1eeceb = getValueBeforeAtSymbol(_0x2bde5f['messages'][0x0]?.[_0xa84c8e(0x21e)]?.[_0xa84c8e(0x20e)]); if (_0xcdaab2[_0xa84c8e(0x20f)]) { const _0x377818 = await getNumberByPhonebok(_0xcdaab2[_0xa84c8e(0x20f)]); if (_0x36ab4b(_0x1eeceb, _0x377818)) { _0x230435(); return; } } if (checkForKeyword(_0x2bde5f[_0xa84c8e(0x22b)][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x22d)], _0xcdaab2['keyword']) || checkForKeyword(_0x2bde5f[_0xa84c8e(0x22b)][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x207)]?.['text'], _0xcdaab2['keyword']) || checkForKeyword(_0x2bde5f['messages'][0x0]?.['message']?.[_0xa84c8e(0x226)]?.[_0xa84c8e(0x228)], _0xcdaab2['keyword']) || checkForKeyword(_0x2bde5f['messages'][0x0]?.[_0xa84c8e(0x215)]?.[_0xa84c8e(0x1fc)]?.[_0xa84c8e(0x21c)], _0xcdaab2[_0xa84c8e(0x20b)])) { if (_0xcdaab2[_0xa84c8e(0x225)]) { const _0x2df662 = { 'react': { 'text': _0xcdaab2['reaction'], 'key': _0x2bde5f[_0xa84c8e(0x22b)][0x0][_0xa84c8e(0x21e)] } }; await sendMessageMain(_0x152c67, _0x1eeceb, _0x2df662, _0x43154a); } _0xcdaab2[_0xa84c8e(0x214)] == 0x1 && (_0x15356f[_0xa84c8e(0x212)](_0xa84c8e(0x218), _0x2bde5f[_0xa84c8e(0x22b)][0x0][_0xa84c8e(0x21e)][_0xa84c8e(0x20e)]), setTimeout(() => { const _0x28db89 = _0xa84c8e; _0x15356f['sendPresenceUpdate']('paused', _0x2bde5f[_0x28db89(0x22b)][0x0][_0x28db89(0x21e)][_0x28db89(0x20e)]); }, 0x3e8)), await addMessageLog(_0x43154a, _0x1eeceb, JSON[_0xa84c8e(0x221)](_0xcdaab2[_0xa84c8e(0x20a)]), 'bot', _0xa84c8e(0x213)), await _0x15356f[_0xa84c8e(0x21f)]([_0x2bde5f['messages'][0x0][_0xa84c8e(0x21e)]]), await sendMessageMain(_0x152c67, _0x1eeceb, JSON[_0xa84c8e(0x221)](_0xcdaab2[_0xa84c8e(0x20a)]), _0x43154a); } } }), _0x230435(); } catch (_0x584391) { console[_0x141203(0x202)](_0x584391); } }); }, addBot = async (_0x169c4f, _0x5684fe) => { const _0x800d00 = _0x3eab; try { const _0x59e8ef = await findIfUserHaveBotAllowed(_0x169c4f[_0x800d00(0x204)][_0x800d00(0x224)]); if (!_0x59e8ef) return _0x5684fe['json']({ 'msg': _0x800d00(0x211) }); await _0x471f2a(_0x800d00(0x21a), [_0x169c4f['decode'][_0x800d00(0x224)], _0x169c4f[_0x800d00(0x1f9)][_0x800d00(0x1f7)], _0x169c4f[_0x800d00(0x1f9)]['reply_type'], _0x169c4f[_0x800d00(0x1f9)]['reply_choice'], _0x169c4f[_0x800d00(0x1f9)][_0x800d00(0x20b)], JSON[_0x800d00(0x22c)](_0x169c4f[_0x800d00(0x1f9)][_0x800d00(0x20a)]), _0x169c4f['body']['enable_typing'] ? 0x1 : 0x0, _0x169c4f[_0x800d00(0x1f9)][_0x800d00(0x225)], _0x169c4f[_0x800d00(0x1f9)]['comment'], _0x169c4f[_0x800d00(0x1f9)]['phonebook']]), _0x5684fe['json']({ 'success': !![], 'msg': _0x800d00(0x22e) }); } catch (_0x4810bd) { _0x5684fe[_0x800d00(0x220)]({ 'success': ![], 'msg': 'server\x20error', 'err': _0x4810bd }), console['log'](_0x4810bd); } }, getAllBot = async (_0x2fa6e3, _0x106d74) => { const _0x74ca73 = _0x3eab; try { const _0x4ca01e = await _0x471f2a(_0x74ca73(0x222), [_0x2fa6e3[_0x74ca73(0x204)][_0x74ca73(0x224)]]); _0x106d74['json']({ 'data': _0x4ca01e, 'success': !![] }); } catch (_0x4acd44) { _0x106d74[_0x74ca73(0x220)]({ 'success': ![], 'msg': _0x74ca73(0x20d), 'err': _0x4acd44 }), console[_0x74ca73(0x202)](_0x4acd44); } }, botOffOn = async (_0x4dbd70, _0x5b4ec0) => { const _0x34ba41 = _0x3eab; try { await _0x471f2a(_0x34ba41(0x1fd), [_0x4dbd70[_0x34ba41(0x1f9)]['status'] ? 0x1 : 0x0, _0x4dbd70[_0x34ba41(0x1f9)]['id']]), _0x5b4ec0['json']({ 'success': !![], 'msg': _0x4dbd70[_0x34ba41(0x1f9)][_0x34ba41(0x22a)] ? 'Bot\x20was\x20on' : 'Bot\x20was\x20off' }); } catch (_0xff060e) { _0x5b4ec0['json']({ 'success': ![], 'msg': 'server\x20error', 'err': _0xff060e }), console['log'](_0xff060e); } }, delBot = async (_0x29132c, _0x3490e4) => { const _0x1ad8f5 = _0x3eab; try { await _0x471f2a(_0x1ad8f5(0x1fe), [_0x29132c[_0x1ad8f5(0x1f9)]['id']]), _0x3490e4['json']({ 'success': !![], 'msg': _0x1ad8f5(0x208) }); } catch (_0x1e7c62) { _0x3490e4[_0x1ad8f5(0x220)]({ 'success': ![], 'msg': _0x1ad8f5(0x20d), 'err': _0x1e7c62 }), console[_0x1ad8f5(0x202)](_0x1e7c62); } }; export { webhook, addBot, getAllBot, botOffOn, delBot };
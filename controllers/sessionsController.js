(function (_0x3f957a, _0x2ec028) { const _0x55787b = _0x2079, _0x32e9a2 = _0x3f957a(); while (!![]) { try { const _0x1e881e = -parseInt(_0x55787b(0x15c)) / 0x1 + parseInt(_0x55787b(0x16a)) / 0x2 + parseInt(_0x55787b(0x163)) / 0x3 * (-parseInt(_0x55787b(0x175)) / 0x4) + -parseInt(_0x55787b(0x15f)) / 0x5 + parseInt(_0x55787b(0x152)) / 0x6 * (parseInt(_0x55787b(0x171)) / 0x7) + parseInt(_0x55787b(0x15d)) / 0x8 * (-parseInt(_0x55787b(0x157)) / 0x9) + parseInt(_0x55787b(0x165)) / 0xa; if (_0x1e881e === _0x2ec028) break; else _0x32e9a2['push'](_0x32e9a2['shift']()); } catch (_0x5cfc17) { _0x32e9a2['push'](_0x32e9a2['shift']()); } } }(_0x5eb7, 0xafef6)); import { isSessionExists, createSession, getSession, deleteSession } from './../whatsapp.js'; import _0x1be033 from './../response.js'; import _0x1700b6 from '../database/dbpromise.js'; import _0x37bac0 from 'fs'; function saveAsJson(_0x81a620, _0x5a89fa) { const _0xdcdf96 = _0x2079; try { const _0x5d7e41 = JSON[_0xdcdf96(0x151)](_0x81a620, null, 0x2); _0x37bac0[_0xdcdf96(0x16c)](_0x5a89fa, _0x5d7e41), console['log']('JSON\x20file\x20saved\x20successfully.'); } catch (_0x105a94) { console[_0xdcdf96(0x169)]('Error\x20saving\x20JSON\x20file:', _0x105a94); } } function _0x5eb7() { const _0x37d75f = ['error', '1301116vVKCfV', 'connected', 'writeFileSync', 'isLegacy', 'The\x20session\x20has\x20been\x20successfully\x20deleted.', 'The\x20session\x20was\x20deleted', 'sessionId', '769853jVqcwo', 'undefined', 'disconnected', 'uid', '162964vxEIeJ', 'stringify', '6WFUCxh', 'user', 'true', 'connection.update', 'locals', '30465RkHaDo', 'server\x20error', 'body', 'legacy', 'json', '563627wWUCOh', '1752TuALVe', 'disconnecting', '1361470vYKVVT', 'Session\x20found.', 'state', 'Session\x20already\x20exists,\x20please\x20use\x20another\x20id.', '24uJGKRw', 'log', '18632570SSDEKW', 'SELECT\x20*\x20FROM\x20instance\x20WHERE\x20uid\x20=\x20?', 'readyState', 'params']; _0x5eb7 = function () { return _0x37d75f; }; return _0x5eb7(); } const find = (_0x573c3f, _0x2c7fd4) => { const _0x3af96d = _0x2079; _0x1be033(_0x2c7fd4, 0xc8, !![], _0x3af96d(0x160)); }; function waitForConnectionUpdate(_0x4c463d) { return new Promise(_0x1ae4aa => { const _0x38d849 = _0x2079; _0x4c463d['ev']['on'](_0x38d849(0x155), _0x468be2 => { const _0x59cb4a = _0x38d849, { connection: _0x44820f, lastDisconnect: _0x2c580e, qr: _0x2efea7, isNewLogin: _0x2dad1b } = _0x468be2; console[_0x59cb4a(0x164)]({ 'connection': _0x44820f, 'update': _0x468be2 }), _0x1ae4aa(_0x468be2); }); }); } const status = (_0xf9f749, _0x24e678) => { const _0x3f7a08 = _0x2079, _0x82bf78 = ['connecting', _0x3f7a08(0x16b), _0x3f7a08(0x15e), _0x3f7a08(0x173)], _0x14bb6d = getSession(_0x24e678[_0x3f7a08(0x156)][_0x3f7a08(0x170)]); let _0x1e029e = _0x82bf78[_0x14bb6d['ws'][_0x3f7a08(0x167)]]; _0x1e029e = _0x1e029e === _0x3f7a08(0x16b) && typeof (_0x14bb6d[_0x3f7a08(0x16d)] ? _0x14bb6d[_0x3f7a08(0x161)][_0x3f7a08(0x15a)][_0x3f7a08(0x153)] : _0x14bb6d[_0x3f7a08(0x153)]) !== _0x3f7a08(0x172) ? 'authenticated' : _0x1e029e; const _0x3765ed = _0x14bb6d[_0x3f7a08(0x153)] ? !![] : ![]; _0x1be033(_0x24e678, 0xc8, !![], '', { 'status': _0x1e029e, 'loginStatus': _0x3765ed }); }, add = async (_0x21257d, _0x3fab25) => { const _0x31d8bd = _0x2079, { id: _0x3cc72c, isLegacy: _0x20fc85 } = _0x21257d[_0x31d8bd(0x159)]; if (isSessionExists(_0x3cc72c)) return _0x1be033(_0x3fab25, 0x199, ![], _0x31d8bd(0x162)); await _0x1700b6('INSERT\x20INTO\x20instance\x20(uid,\x20client_id,\x20name)\x20VALUES\x20(?,?,?)', [_0x21257d['decode'][_0x31d8bd(0x174)], _0x3cc72c, _0x21257d[_0x31d8bd(0x159)]['name']]), createSession(_0x3cc72c, _0x20fc85 === _0x31d8bd(0x154), _0x3fab25); }, del = async (_0x34ddbe, _0x213969) => { const _0x4a96c7 = _0x2079, { id: _0x2ac6bd } = _0x34ddbe[_0x4a96c7(0x168)], _0x528c4f = getSession(_0x2ac6bd); try { await _0x528c4f['logout'](); } catch { } finally { deleteSession(_0x2ac6bd, _0x528c4f[_0x4a96c7(0x16d)]); } _0x1be033(_0x213969, 0xc8, !![], _0x4a96c7(0x16e), { 'msg': _0x4a96c7(0x16f) }); }, getUserSessions = async (_0x161e19, _0x37ca89) => { const _0x5f3039 = _0x2079; try { const _0x329e8e = await _0x1700b6(_0x5f3039(0x166), [_0x161e19['decode'][_0x5f3039(0x174)]]); _0x37ca89[_0x5f3039(0x15b)]({ 'success': !![], 'data': _0x329e8e }); } catch (_0x254253) { console['log'](_0x254253), _0x37ca89['json']({ 'err': _0x254253, 'msg': _0x5f3039(0x158) }); } }; function _0x2079(_0x1aac75, _0x397aa6) { const _0x5eb7e8 = _0x5eb7(); return _0x2079 = function (_0x2079a1, _0x1230a1) { _0x2079a1 = _0x2079a1 - 0x151; let _0x370dde = _0x5eb7e8[_0x2079a1]; return _0x370dde; }, _0x2079(_0x1aac75, _0x397aa6); } export { find, status, add, del, getUserSessions };
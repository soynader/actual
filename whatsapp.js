(function (_0x41ef3f, _0x59750a) { const _0x1c5fcb = _0x63bd, _0x5a0adc = _0x41ef3f(); while (!![]) { try { const _0x4c9c2c = -parseInt(_0x1c5fcb(0x1a1)) / 0x1 + -parseInt(_0x1c5fcb(0x177)) / 0x2 + -parseInt(_0x1c5fcb(0x1a2)) / 0x3 * (parseInt(_0x1c5fcb(0x167)) / 0x4) + parseInt(_0x1c5fcb(0x165)) / 0x5 + parseInt(_0x1c5fcb(0x19e)) / 0x6 + parseInt(_0x1c5fcb(0x19c)) / 0x7 * (parseInt(_0x1c5fcb(0x18d)) / 0x8) + -parseInt(_0x1c5fcb(0x17b)) / 0x9; if (_0x4c9c2c === _0x59750a) break; else _0x5a0adc['push'](_0x5a0adc['shift']()); } catch (_0x356b95) { _0x5a0adc['push'](_0x5a0adc['shift']()); } } }(_0x3425, 0x808be)); import { existsSync, unlinkSync, readdir } from 'fs'; import { join } from 'path'; import _0x4d0c54 from 'pino'; import _0x5900d7, { makeInMemoryStore, Browsers, DisconnectReason, delay, useMultiFileAuthState } from '@whiskeysockets/baileys'; import { toDataURL } from 'qrcode'; import _0x569536 from './dirname.js'; import _0xc9ddc3 from './response.js'; import _0x3ffb5b from './database/dbpromise.js'; import { webhook } from './controllers/botController.js'; import { createJsonFile, deleteFileIfExists } from './functions/function.js'; import _0x14ef50 from 'fs'; import _0x1ec509 from 'path'; function _0x63bd(_0x2891c7, _0x171477) { const _0x34250d = _0x3425(); return _0x63bd = function (_0x63bd4c, _0x7be5a) { _0x63bd4c = _0x63bd4c - 0x15a; let _0x3bf1e3 = _0x34250d[_0x63bd4c]; return _0x3bf1e3; }, _0x63bd(_0x2891c7, _0x171477); } const sessions = new Map(), retries = new Map(), sessionsDir = (_0x2ce157 = '') => { const _0x18f614 = _0x63bd; return join(_0x569536, _0x18f614(0x181), _0x2ce157 ? _0x2ce157 + _0x18f614(0x185) : ''); }, isSessionExists = _0xe05b29 => { return sessions['has'](_0xe05b29); }, isSessionFileExists = _0x39128b => { return existsSync(sessionsDir(_0x39128b)); }, shouldReconnect = _0x177c76 => { const _0x365aa7 = _0x63bd; let _0x1a13fb = parseInt(0x5), _0x36cc41 = retries[_0x365aa7(0x172)](_0x177c76) ?? 0x0; _0x1a13fb = _0x1a13fb < 0x1 ? 0x1 : _0x1a13fb; if (_0x36cc41 < _0x1a13fb) return ++_0x36cc41, console[_0x365aa7(0x17e)](_0x365aa7(0x193), { 'attempts': _0x36cc41, 'sessionId': _0x177c76 }), retries[_0x365aa7(0x173)](_0x177c76, _0x36cc41), !![]; return ![]; }, createSession = async (_0x5d9119, _0x793545 = ![], _0x5262d1 = null, _0x295b52) => { const _0x3bdc98 = _0x63bd, _0x9504a3 = _0x3bdc98(0x19a) + _0x5d9119, _0x36a663 = _0x4d0c54({ 'level': _0x3bdc98(0x15d) }), _0x3ef15d = makeInMemoryStore({ 'logger': _0x36a663 }), { state: _0x2fe926, saveCreds: _0xd9e49c } = await useMultiFileAuthState(sessionsDir(_0x9504a3)), _0x39457e = { 'auth': _0x2fe926, 'printQRInTerminal': ![], 'logger': _0x36a663, 'browser': Browsers[_0x3bdc98(0x189)](_0x3bdc98(0x183)), 'syncFullHistory': !![] }, _0x5334c5 = _0x5900d7[_0x3bdc98(0x187)](_0x39457e); !_0x793545 && (_0x3ef15d[_0x3bdc98(0x190)](sessionsDir(_0x5d9119 + _0x3bdc98(0x180))), _0x3ef15d[_0x3bdc98(0x184)](_0x5334c5['ev'])), sessions[_0x3bdc98(0x173)](_0x5d9119, { ..._0x5334c5, 'store': _0x3ef15d, 'isLegacy': _0x793545 }), _0x5334c5['ev']['on']('creds.update', _0xd9e49c), _0x5334c5['ev']['on'](_0x3bdc98(0x16b), ({ chats: _0x31da91 }) => { const _0x2ce182 = _0x3bdc98; _0x793545 && _0x3ef15d[_0x2ce182(0x195)]['insertIfAbsent'](..._0x31da91); }), _0x5334c5['ev']['on'](_0x3bdc98(0x188), () => { const _0x4ce35e = _0x3bdc98; createJsonFile(_0x5d9119, Object['values'](_0x3ef15d[_0x4ce35e(0x18a)])); }), _0x5334c5['ev']['on']('messages.upsert', async _0x4db114 => { const _0x281aa9 = _0x3bdc98, _0x3343fb = _0x4db114[_0x281aa9(0x15f)][0x0]; if (!_0x3343fb[_0x281aa9(0x19d)][_0x281aa9(0x186)] && _0x4db114[_0x281aa9(0x15b)] === _0x281aa9(0x164)) { await delay(0x3e8); const _0x23986d = process[_0x281aa9(0x191)][_0x281aa9(0x18c)] + _0x281aa9(0x160); await webhook(_0x4db114, _0x5334c5, _0x5d9119); } }), _0x5334c5['ev']['on']('connection.update', async _0xa86090 => { const _0x2280c9 = _0x3bdc98, { connection: _0x44d8e5, lastDisconnect: _0x410f70 } = _0xa86090, _0x35a062 = _0x410f70?.['error']?.[_0x2280c9(0x163)]?.[_0x2280c9(0x18b)]; console[_0x2280c9(0x17e)](_0x2280c9(0x196), _0x44d8e5); _0x44d8e5 === 'open' && retries[_0x2280c9(0x16e)](_0x5d9119); if (_0x44d8e5 === 'close') { if (_0x35a062 === DisconnectReason['loggedOut'] || !shouldReconnect(_0x5d9119)) return _0x5262d1 && !_0x5262d1[_0x2280c9(0x168)] && _0xc9ddc3(_0x5262d1, 0x1f4, ![], _0x2280c9(0x18f)), deleteSession(_0x5d9119, _0x793545); setTimeout(() => { createSession(_0x5d9119, _0x793545, _0x5262d1); }, _0x35a062 === DisconnectReason[_0x2280c9(0x15c)] ? 0x0 : parseInt(0x1388)); } if (_0xa86090['qr']) { if (_0x5262d1 && !_0x5262d1[_0x2280c9(0x168)]) try { const _0x357b44 = await toDataURL(_0xa86090['qr']); _0xc9ddc3(_0x5262d1, 0xc8, !![], _0x2280c9(0x199), { 'qr': _0x357b44 }); return; } catch { _0xc9ddc3(_0x5262d1, 0x1f4, ![], _0x2280c9(0x176)); } try { await _0x5334c5[_0x2280c9(0x178)](); } catch { } finally { deleteSession(_0x5d9119, _0x793545); } } }); }, getSession = _0x26296d => { const _0x10dc3c = _0x63bd; return sessions[_0x10dc3c(0x172)](_0x26296d) ?? null; }, deleteDirectory = _0x3b7751 => { const _0x16cff6 = _0x63bd; _0x14ef50[_0x16cff6(0x16d)](_0x3b7751) && (_0x14ef50[_0x16cff6(0x197)](_0x3b7751)['forEach'](_0x33c58a => { const _0x4bfafc = _0x16cff6, _0x24ded7 = _0x3b7751 + '/' + _0x33c58a; _0x14ef50[_0x4bfafc(0x182)](_0x24ded7)['isDirectory']() ? deleteDirectory(_0x24ded7) : _0x14ef50[_0x4bfafc(0x19f)](_0x24ded7); }), _0x14ef50[_0x16cff6(0x1a0)](_0x3b7751)); }, deleteSession = async (_0x473764, _0x203ae7 = ![]) => { const _0x3e4866 = _0x63bd, _0xae25d7 = 'md_' + _0x473764, _0x526188 = _0x473764 + '_store'; await _0x3ffb5b(_0x3e4866(0x192), [_0x473764]); const _0x5e93a3 = process[_0x3e4866(0x170)](); deleteFileIfExists(_0x5e93a3 + _0x3e4866(0x19b) + _0x473764 + _0x3e4866(0x185)), isSessionFileExists(_0xae25d7) && deleteDirectory(sessionsDir(_0xae25d7)), isSessionFileExists(_0x526188) && unlinkSync(sessionsDir(_0x526188)), sessions[_0x3e4866(0x16e)](_0x473764), retries[_0x3e4866(0x16e)](_0x473764); }, getChatList = (_0x1ccdfe, _0x17345b = ![]) => { const _0x45d3de = _0x63bd, _0x459a56 = _0x17345b ? _0x45d3de(0x17f) : _0x45d3de(0x17a); return getSession(_0x1ccdfe)[_0x45d3de(0x16c)][_0x45d3de(0x195)][_0x45d3de(0x161)](_0x597895 => { const _0x58d0a7 = _0x45d3de; return _0x597895['id'][_0x58d0a7(0x16f)](_0x459a56); }); }, isExists = async (_0x39b919, _0x78f098, _0x15a07b = ![]) => { const _0x316a20 = _0x63bd; try { let _0x1ced1a; if (_0x15a07b) return _0x1ced1a = await _0x39b919[_0x316a20(0x15e)](_0x78f098), Boolean(_0x1ced1a['id']); if (_0x39b919[_0x316a20(0x198)]) _0x1ced1a = await _0x39b919['onWhatsApp'](_0x78f098); else { ;[_0x1ced1a] = await _0x39b919[_0x316a20(0x166)](_0x78f098); if (typeof _0x1ced1a === _0x316a20(0x194)) { console[_0x316a20(0x17e)](_0x316a20(0x175)); const _0x445e86 = _0x78f098['replace'](_0x316a20(0x17a), '');[_0x1ced1a] = await _0x39b919[_0x316a20(0x166)]('+' + _0x445e86); } } return _0x1ced1a[_0x316a20(0x179)]; } catch { return ![]; } }, sendMessage = async (_0x32f912, _0x1d9a10, _0xff52b4) => { const _0x4d4833 = _0x63bd; try { return await delay(0x3e8), _0x32f912['sendMessage'](_0x1d9a10, _0xff52b4); } catch { return Promise[_0x4d4833(0x169)](null); } }, getGroupData = async (_0x279d5c, _0xc92e38) => { const _0x35b784 = _0x63bd; try { const _0x203829 = await _0x279d5c['groupMetadata'](_0xc92e38); return _0x203829; } catch { return Promise[_0x35b784(0x169)](null); } }, formatPhone = _0x15bdbb => { const _0x336829 = _0x63bd; if (_0x15bdbb[_0x336829(0x16f)](_0x336829(0x17a))) return _0x15bdbb; let _0x136591 = _0x15bdbb[_0x336829(0x171)](/\D/g, ''); return _0x136591 += '@s.whatsapp.net'; }, formatGroup = _0x3557e7 => { const _0x2ab99d = _0x63bd; if (_0x3557e7[_0x2ab99d(0x16f)](_0x2ab99d(0x17f))) return _0x3557e7; let _0x5930b6 = _0x3557e7[_0x2ab99d(0x171)](/[^\d-]/g, ''); return _0x5930b6 += '@g.us'; }, cleanup = () => { const _0x32f234 = _0x63bd; console[_0x32f234(0x17e)](_0x32f234(0x162)), sessions[_0x32f234(0x174)]((_0xc582f2, _0x3d55be) => { const _0x179618 = _0x32f234; !_0xc582f2[_0x179618(0x198)] && _0xc582f2[_0x179618(0x16c)][_0x179618(0x17c)](sessionsDir(_0x3d55be + _0x179618(0x180))); }); }, init = () => { const _0x1be2bf = _0x63bd, _0x57c1fa = _0x1ec509['join'](_0x569536, _0x1be2bf(0x181)); _0x14ef50[_0x1be2bf(0x17d)](_0x57c1fa, (_0x96b52c, _0x251dbc) => { const _0x8b4d27 = _0x1be2bf; if (_0x96b52c) throw _0x96b52c; for (const _0x46e0d5 of _0x251dbc) { if (!_0x46e0d5[_0x8b4d27(0x16f)]('.json') || !_0x46e0d5[_0x8b4d27(0x18e)](_0x8b4d27(0x19a)) || _0x46e0d5[_0x8b4d27(0x16a)]('_store')) continue; const _0xca0785 = _0x46e0d5[_0x8b4d27(0x171)](_0x8b4d27(0x185), ''), _0x53392f = _0xca0785['split']('_', 0x1)[0x0] !== 'md', _0x1dc863 = _0xca0785[_0x8b4d27(0x15a)](_0x53392f ? 0x7 : 0x3); createSession(_0x1dc863, _0x53392f); } }); }; function _0x3425() { const _0x43cc86 = ['warn', 'groupMetadata', 'messages', '/api/bot/webhook', 'filter', 'Running\x20cleanup\x20before\x20exit.', 'output', 'notify', '5170755kcSffk', 'onWhatsApp', '2028VwmVAa', 'headersSent', 'reject', 'includes', 'chats.set', 'store', 'existsSync', 'delete', 'endsWith', 'cwd', 'replace', 'get', 'set', 'forEach', 'checked', 'Unable\x20to\x20create\x20QR\x20code.', '893612rtdCIw', 'logout', 'exists', '@s.whatsapp.net', '2108088ZlDqpW', 'writeToFile', 'readdir', 'log', '@g.us', '_store', 'sessions', 'lstatSync', 'Chrome', 'bind', '.json', 'fromMe', 'default', 'contacts.update', 'ubuntu', 'contacts', 'statusCode', 'URI', '353272OeRfQE', 'startsWith', 'Unable\x20to\x20create\x20session.', 'readFromFile', 'env', 'DELETE\x20FROM\x20instance\x20WHERE\x20client_id\x20=\x20?', 'Reconnecting...', 'undefined', 'chats', 'message', 'readdirSync', 'isLegacy', 'QR\x20code\x20received,\x20please\x20scan\x20the\x20QR\x20code.', 'md_', '/contacts/', '133tUgLRt', 'key', '688530aQsdmo', 'unlinkSync', 'rmdirSync', '613560vTxteK', '987zJsFxA', 'substring', 'type', 'restartRequired']; _0x3425 = function () { return _0x43cc86; }; return _0x3425(); } export { isSessionExists, createSession, getSession, deleteSession, getChatList, isExists, sendMessage, formatPhone, formatGroup, cleanup, init, getGroupData };